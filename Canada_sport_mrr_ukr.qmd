---
title: "Canadian Sport Data revisions"
author: "Norah Brown"
date: today

editor: visual
execute: 
  warning: false

theme: litera
 
format:
  html:
    page-layout: full
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
toc: true
toc-depth: 4
toc-location: left
---

# Methods

```{r Loading packages, echo=FALSE}
#load packages
library(tidyverse)
library(odbc)
library(lubridate)
library(ggnewscale)
library(patchwork)
library(DHARMa)
library(lme4)
library(bbmle)
library(SuppDists)

#utils
"%notin%" <- Negate("%in%")

col1 = "#d8e1cf"
col2 = "#438484"
col3 = "lightblue"
col4 = "lightblue4"
col5 = "pink"
col6 = "darkred"
colclear= "#1C00ff00"

```

## Pulling and filtering data

-   We pulled raw recreational catch data from CREST database: data sources include creel, irec, lodge and log-book data. Data is typically in number of marked and unmarked fish kept and released.

```{r Pulling from CREST, cache=TRUE}

#Pull sport data from CREST
source("PullAllSport.R")
# PullAllSport(Start_year) set the calendar year to start querying from to the current year
rslt <- PullAllSport(2005)
quality_report <- rslt[[1]]
estimates <- rslt[[2]]
rm(rslt)
```

-   Filtered data for marine estimates only

-   Filtered the creel data based on high quality creel which meet the following criteria in a given PFMA and month:

    -   At least 3 flights for each type of day (weekday or weekend)
    -   At least 25 interviews mid week OR at least 10% of interviews from mid-week
    -   At least 25 interviews on weekends OR at least 10% of interviews from weekend
    -   At least 15 day spread in flights
    -   At least 15 day spread in interviews

-   We combined estimates under sources called "Lodge Log","Lodge Manifest","Lodge Manifest - Log", "Lodge Estimate", "Log Estimate", "Lodge eLog" to be called lodge_log.

-   We identify a season - spring is months 1:5, summer 6:8 and fall 9:12

-   We also expanded the dataset to include all combinations of area, year, month, mark status, kept status and source -\> adding NAs where no data was collected

```{r Aligning creel and irec, cache=TRUE}
Sport_filtered_south_irec<-
  estimates |>
  as_tibble() |>
  mutate(INCLUDE_15 = case_when(
    SOURCE != "Creel" ~ 1,
    TRUE ~ INCLUDE_15
  ))|>
  filter(INCLUDE_15 ==1, YEAR<2024)|>
  filter(AREA %notin% c("Area 29 (In River)", "Campbell River", "Quinsam River", "CR-1", "CR-2", "CR-3", "CR-4", "QR-1", "QR-2", "QR-3", "QR-4")) |>
   mutate(AREA = case_when(
    AREA== "Area 29 (Marine)" ~ "Area 29",
    TRUE ~ as.character(AREA))) |>
  filter(SUB_TYPE == "LEGAL") |>
  mutate(REGION2 = case_when(AREA == "Area 2" ~ "NC", TRUE ~ REGION2)) |>
  mutate(MARKS_DESC = case_when(
    MARKS_DESC == "Not Adipose Checked" ~ "unchecked",
    MARKS_DESC == "Not Checked" ~ "unchecked",
    MARKS_DESC == "Not Applicable" ~ "unchecked",
    MARKS_DESC == "Not Adipose Marked" ~ "unmarked",
    MARKS_DESC == "Adipose Marked" ~ "marked")) |>
  mutate(SOURCE = case_when(
    SOURCE == "Creel" ~ "creel",
    SOURCE == "Historic" ~ "historic",
    SOURCE %in% c("Lodge Log","Lodge Manifest","Lodge Manifest - Log", "Lodge Estimate", "Log Estimate", "Lodge eLog") ~ "lodge_log",
    SOURCE == "iREC" ~ "irec_calibrated",
    TRUE ~ SOURCE )) |>
  group_by(YEAR, MONTH, AREA, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) |>
  summarise(VARIANCE=sum(VARIANCE), VAL=sum(ESTIMATE)) |> ungroup() |>
  mutate(season = case_when(
    MONTH %in% c(1:5) ~ "spring", 
    MONTH %in% c(6:8) ~ "summer", 
    MONTH %in% c(9:12) ~ "fall" 
  ))

```

## Extrapolating unchecked catch

-   We also expanded the dataset to include all combinations of area, year, month, mark status, kept status and source -\> adding NAs where no data was collected

-   Data is typically in number of marked and unmarked fish kept and released, however, there are two other categories when mark status is unknown: unchecked kept and unchecked released. We need to extrapolate to marked and unmarked catch using mark rate

-   We calculated mark rate in a number of different ways and prioritize the assignment of mark rate in the following order:

    1.  Monthly area calculation - Mark rate calculated for a given source (iREC, creel, or logbook) within a given year, month, and area
    2.  Monthly average by source - Mark rate calculated within a given year, month, and area, averaged across sources
    3.  Monthly regional average - Mark rate calculated for a given source within a given year, month, and region (averaged across areas within a region)
    4.  Seasonal area average - Mark rate calculated for a given source (iREC, creel, or logbook) within a given year, season, and area
    5.  Seasonal regional average -Mark rate calculated for a given source within a given year, season, and region
    6.  Monthly area average across years - Mark rate calculated for a given source within a given month, area, and across years
    7.  Monthly regional average across years- Mark rate calculated for a given source within a given month, region, and across years

```{r Mark rates by category, cache=TRUE}

#2. Mark rate averaged across source
Sport_mark_rate_source<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, season, REGION2, SOURCE, MANAGEMENT), names_from=c(MARKS_DESC, TYPE), values_from = sum) |>
  mutate(marked_prop_source = sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  mutate_all(~ifelse(is.nan(.), NA, .)) %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT) %>% summarise(marked_prop_source =mean(marked_prop_source, na.rm=TRUE)) %>%
  dplyr::select(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, marked_prop_source) %>% ungroup()

#3. Mark rate monthly Regional average
Sport_mark_rate_REGION2<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_REGION2 =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by(YEAR, REGION2, MONTH, season, SOURCE, MANAGEMENT) %>% summarise(marked_prop_REGION2 =mean(marked_prop_REGION2, na.rm=TRUE)) %>%
  dplyr::select(YEAR, MONTH, season, REGION2, MANAGEMENT, marked_prop_REGION2) %>% ungroup()

#4. Mark rate seasonal area average
Sport_mark_rate_seasonal<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, REGION2, MANAGEMENT, SOURCE, season), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_seasonal =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by(YEAR, season, AREA, REGION2, SOURCE, MANAGEMENT) %>% summarise(marked_prop_seasonal =mean(marked_prop_seasonal, na.rm=TRUE)) %>%
  dplyr::select(YEAR, season, AREA, REGION2, MANAGEMENT, marked_prop_seasonal) %>% ungroup()

#5. Mark rate seasonal regional average
Sport_mark_rate_seasonal_reg<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, REGION2, MANAGEMENT, SOURCE, season), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_seasonal_reg =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by(YEAR,season, REGION2, SOURCE, MANAGEMENT) %>% summarise(marked_prop_seasonal_reg =mean(marked_prop_seasonal_reg, na.rm=TRUE)) %>%
  dplyr::select(YEAR, season, REGION2, MANAGEMENT, marked_prop_seasonal_reg) %>% ungroup()

#6. Mark rate area month across years
Sport_mark_rate_area_month<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, REGION2, MANAGEMENT, SOURCE, season), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_area_month =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by(AREA, MONTH, season, REGION2, SOURCE, MANAGEMENT) %>% summarise(marked_prop_area_month =mean(marked_prop_area_month, na.rm=TRUE)) %>%
  dplyr::select(AREA, MONTH, season, REGION2, MANAGEMENT, marked_prop_area_month) %>% ungroup()

#7. Mark rate regional month across years
Sport_mark_rate_region_month<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, REGION2, MANAGEMENT, SOURCE, season), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_region_month =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by( MONTH, season, REGION2, SOURCE, MANAGEMENT) %>% summarise(marked_prop_region_month =mean(marked_prop_region_month, na.rm=TRUE)) %>%
  dplyr::select(MONTH, season, REGION2, MANAGEMENT, SOURCE, marked_prop_region_month) %>% ungroup()
```

```{r expanding to all combinations, cache=TRUE}
allobs2 <- tidyr::expand(Sport_filtered_south_irec, nesting(AREA, REGION2, MANAGEMENT), YEAR, nesting(MONTH, season), MARKS_DESC, TYPE, SOURCE)

```

-   We joined the various calculations of mark rate to the catch data and expanded unchecked kept and released into marked and unmarked of those categories using the best available chosen mark rate

```{r Allocating unchecked catch, cache=TRUE}
Sport_mark_rate<- Sport_filtered_south_irec  %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL), sum_VARIANCE=sum(VARIANCE)) %>%
  ungroup() %>%
  full_join(allobs2) %>%
  pivot_wider(id_cols = c(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  group_by(YEAR, MONTH, AREA, season, REGION2, MANAGEMENT, SOURCE) %>%
  mutate(marked_prop = sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  left_join(Sport_mark_rate_source) %>%
  left_join(Sport_mark_rate_seasonal_reg) %>%
  left_join(Sport_mark_rate_area_month) %>%
  left_join(Sport_mark_rate_REGION2) %>%
  left_join(Sport_mark_rate_seasonal)%>%
  left_join(Sport_mark_rate_region_month) %>%
  mutate_all(~ifelse(is.nan(.), NA, .)) %>%
  mutate(marked_prop_use1 = case_when(
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & !is.na(marked_prop_source) & marked_prop_source %notin% c(0,1) ~ marked_prop_source,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & !is.na(marked_prop_REGION2) & marked_prop_REGION2 %notin% c(0,1) ~ marked_prop_REGION2,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & (is.na(marked_prop_REGION2)| marked_prop_REGION2 %in% c(0,1)) & !is.na(marked_prop_seasonal) & marked_prop_seasonal %notin% c(0,1) ~ marked_prop_seasonal,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & (is.na(marked_prop_REGION2)| marked_prop_REGION2 %in% c(0,1)) & (is.na(marked_prop_seasonal)| marked_prop_seasonal %in% c(0,1)) & !is.na(marked_prop_seasonal_reg) & marked_prop_seasonal_reg %notin% c(0,1) ~ marked_prop_seasonal_reg,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & (is.na(marked_prop_REGION2)| marked_prop_REGION2 %in% c(0,1)) & (is.na(marked_prop_seasonal)| marked_prop_seasonal %in% c(0,1)) & (is.na(marked_prop_seasonal_reg) | marked_prop_seasonal_reg %in% c(0,1)) & !is.na(marked_prop_area_month) & marked_prop_area_month %notin% c(0,1) ~ marked_prop_area_month,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & (is.na(marked_prop_REGION2)| marked_prop_REGION2 %in% c(0,1)) & (is.na(marked_prop_seasonal)| marked_prop_seasonal %in% c(0,1)) & (is.na(marked_prop_seasonal_reg) | marked_prop_seasonal_reg %in% c(0,1)) & (is.na(marked_prop_area_month) |marked_prop_area_month %in% c(0,1))& !is.na(marked_prop_region_month) & marked_prop_region_month %notin% c(0,1) ~ marked_prop_region_month,
    TRUE ~ marked_prop)) %>%
  mutate(marked_prop_use = case_when(
    is.na(marked_prop_use1) ~ 0.5, 
    TRUE ~ marked_prop_use1))%>%
  mutate(marked_Kept_add = marked_prop_use*unchecked_Kept,
         marked_Released_add = marked_prop_use*unchecked_Released,
         unmarked_Kept_add = (1-marked_prop_use)*unchecked_Kept,
         unmarked_Released_add = (1-marked_prop_use)*unchecked_Released) %>%
  mutate(marked_Kept_total = sum(marked_Kept_add, marked_Kept, na.rm = TRUE),
         marked_Released_total = sum(marked_Released_add, marked_Released, na.rm=TRUE),
         unmarked_Kept_total = sum(unmarked_Kept_add, unmarked_Kept, na.rm=TRUE),
         unmarked_Released_total = sum(unmarked_Released_add, unmarked_Released, na.rm=TRUE)) %>%
  ungroup()
```

## Choosing best catch estimate

-   We then chose the correct catch estimate by PFMA and month as follows:

    -   In months 5-9 use creel+ lodge if that data exists, otherwise use calibrated iREC

    -   In months outside of 5-9 use calibrated iREC

-   This calculation was grouped ignoring mark and kept status, so that true zeros for one category of catch wouldn't influence the other categories inclusion.

```{r calculating catch estimate, cache=TRUE}
Sport_mark_rate2<-Sport_mark_rate %>%
  dplyr::select(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE, marked_Kept_total, unmarked_Kept_total, marked_Released_total, unmarked_Released_total) %>%
  pivot_longer(cols=c(contains("total")), names_to = "status", values_to = "value") %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE) %>%
  summarise_if(is.numeric, sum, na.rm = TRUE) %>%
  pivot_wider(id_cols = c(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT), names_from = SOURCE, values_from = value) %>%
  mutate_all(~ifelse(is.nan(.), NA, .)) %>%
  rowwise() %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT) %>%
  mutate(creel_plus = sum(creel,lodge_log, na.rm=TRUE),
         historic_plus = sum(historic,lodge_log, na.rm=TRUE)) %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT) %>%
  mutate(catch_estimate_cat = case_when(
    YEAR > 2012 & MONTH %in% c(5:9) & (is.na(creel) | creel==0) ~ "use irec",
    YEAR > 2012 & MONTH %in% c(1:4,10:12) ~ "use irec",
    YEAR < 2013 & (is.na(creel_plus) | creel_plus==0) ~ "use historic",
    TRUE ~ "use creel plus")) %>%
  ungroup() %>% dplyr::select(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, catch_estimate_cat)



Sport_mark_rate3<-Sport_mark_rate %>%
  dplyr::select(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE, marked_Kept_total, unmarked_Kept_total, marked_Released_total, unmarked_Released_total) %>%
  pivot_longer(cols=c(contains("total")), names_to = "status", values_to = "value") %>%
  pivot_wider(id_cols = c(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, status), names_from = SOURCE, values_from = value) %>%
  mutate_all(~ifelse(is.nan(.), NA, .)) %>%
  rowwise() %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, status) %>%
  mutate(creel_plus = sum(creel,lodge_log, na.rm=TRUE),
         historic_plus = sum(historic,lodge_log, na.rm=TRUE)) %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT) %>%
  left_join(Sport_mark_rate2) %>%
  mutate(catch_estimate = case_when(
    catch_estimate_cat == "use irec" ~ as.numeric(irec_calibrated),
    catch_estimate_cat == "use historic" ~  as.numeric(historic_plus),
    catch_estimate_cat == "use creel plus" ~ as.numeric(creel_plus))) %>%
  ungroup() %>%
  relocate(catch_estimate_cat, .after=status)



```

## Splitting fisheries by season

-   Assign previous finescale fisheries to the catch data using PFMAs and month

-   Assign new finescale fisheries (including terminal) to the catch data using PFMAs and season

-   Generally seasonal fisheries fall into the pre-defined categories - spring is months 1:5, summer 6:8 and fall 9:12, with a few exceptions:

    -   WCVI AABM S SUMMER is only months 6:7 for Areas 21, 23, 24

    -   WCVI ISBM S SUMMER encompasses months 7:9 so as to not have a fall fishery that is only one month.

    -   Terminal fisheries are already defined by month, so when possible included a summer period but if not lumped as a single fall period

        -   TCA JDF S is only months 5 to 8, so that fishery stays the same and gets called a single period - SUMMER, no fall or spring category

        -   TJOHN ST S, T NGS S and T SGS S are all months 5 to 12, so 5:8 is summer and 9:12 is fall, no spring category

        -   TWCVI S is only months 8 to 12, so that fishery stays the same and gets called a single period - FALL, no summer or spring category

```{r Assigning finescale fisheries, cache=TRUE}
Sport_mark_rate_finescale<-
  Sport_mark_rate3%>% ungroup %>%
  mutate(finescale_fishery = case_when(
    AREA%in%c("Area 121", "Area 123", "Area 124", "Area 125", "Area 126", "Area 127") & MANAGEMENT=="AABM" & season=="fall" ~ "WCVI AABM S FALL",
    AREA%in%c("Area 121", "Area 123", "Area 124", "Area 125", "Area 126", "Area 127") & MANAGEMENT=="AABM" & season=="spring" ~ "WCVI AABM S SPRING",
    AREA%in%c("Area 121", "Area 123", "Area 124", "Area 125", "Area 126", "Area 127") & MANAGEMENT=="AABM" & season=="summer" ~ "WCVI AABM S SUMMER",

    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & MONTH%in%c(10:12) ~ "WCVI AABM S FALL",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & season=="spring" ~ "WCVI AABM S SPRING",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & MONTH%in%c(6:7) ~ "WCVI AABM S SUMMER",

    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(10:12) ~ "WCVI AABM S FALL",
    AREA%in%c("Area 25", "Area 26", "Area 27") & season=="spring" ~ "WCVI AABM S SPRING",
    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(6) ~ "WCVI AABM S SUMMER",

    AREA%in%c("Area 121", "Area 123", "Area 124", "Area 125", "Area 126", "Area 127") & MANAGEMENT=="ISBM" & MONTH%in%c(7:9) ~ "WCVI ISBM S SUMMER",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)") & MONTH%in%c(8,9) ~ "WCVI ISBM S SUMMER",
    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(7,8,9) ~ "WCVI ISBM S SUMMER",

    (AREA %in%c("Area 13", "Area 14", "Area 15", "Area 16") |REGION2== "GSN")& season=="fall" ~ "NGS S FALL",
    (AREA %in%c("Area 13", "Area 14", "Area 15", "Area 16") |REGION2== "GSN")& season=="spring" ~ "NGS S SPRING",
    (AREA %in%c("Area 13", "Area 14", "Area 15", "Area 16") |REGION2== "GSN")& season=="summer" ~ "NGS S SUMMER",


    (AREA %in%c("Area 17", "Area 18", "Area 19", "Area 19 (GS)", "Area 28", "Area 29") |REGION2== "GSS")& season=="fall" ~ "SGS S FALL", #this captures 19
    (AREA %in%c("Area 17", "Area 18", "Area 19", "Area 19 (GS)", "Area 28", "Area 29") |REGION2== "GSS")& season=="spring" ~ "SGS S SPRING",
    (AREA %in%c("Area 17", "Area 18", "Area 19", "Area 19 (GS)", "Area 28", "Area 29") |REGION2== "GSS")& season=="summer" ~ "SGS S SUMMER",


    (AREA %in% c("Area 11", "Area 111", "Area 12") | REGION2 == "JST") & season=="fall" ~ "JNST S FALL",
    (AREA %in% c("Area 11", "Area 111", "Area 12")| REGION2 == "JST") & season=="spring" ~ "JNST S SPRING",
    (AREA %in% c("Area 11", "Area 111", "Area 12")| REGION2 == "JST") & season=="summer" ~ "JNST S SUMMER",


    AREA %in% c("Area 10", "Area 106", "Area 110", "Area 6", "Area 7", "Area 8", "Area 9", "Area 130", "Area 108", "Area 109", "Area 107") & season=="spring"   ~ "CBC S SPRING",
    AREA %in% c("Area 10", "Area 106", "Area 110", "Area 6", "Area 7", "Area 8", "Area 9", "Area 130", "Area 108", "Area 109", "Area 107") & season=="fall"  ~ "CBC S FALL",
    AREA %in% c("Area 10", "Area 106", "Area 110", "Area 6", "Area 7", "Area 8", "Area 9", "Area 130", "Area 108", "Area 109", "Area 107") & season=="summer"   ~ "CBC S SUMMER",


    AREA %in% c("Area 2","Area 1", "Area 101", "Area 102",  "Area 142", "Area 2E", "Area 2W")& season=="spring"   ~ "NBC AABM S SPRING",
    AREA %in% c("Area 2","Area 1", "Area 101", "Area 102",  "Area 142", "Area 2E", "Area 2W")& season=="fall"  ~ "NBC AABM S FALL",
    AREA %in% c("Area 2","Area 1", "Area 101", "Area 102",  "Area 142", "Area 2E", "Area 2W")& season=="summer"  ~ "NBC AABM S SUMMER",


    AREA %in% c( "Area 103", "Area 104", "Area 105", "Area 3", "Area 4", "Area 5")& season=="spring"  ~ "NBC ISBM S SPRING",
    AREA %in% c( "Area 103", "Area 104", "Area 105", "Area 3", "Area 4", "Area 5")& season=="fall"  ~ "NBC ISBM S FALL",
    AREA %in% c( "Area 103", "Area 104", "Area 105", "Area 3", "Area 4", "Area 5")& season=="summer"  ~ "NBC ISBM S SUMMER",


    (AREA %in% c("Area 19", "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)") | REGION2 == "JDF") & season=="spring"  ~ "CA JDF S SPRING", #this captures 19
    (AREA %in% c("Area 19", "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)") | REGION2 == "JDF") & season=="fall"  ~ "CA JDF S FALL",
    (AREA %in% c("Area 19", "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)") | REGION2 == "JDF") & season=="summer"  ~ "CA JDF S SUMMER")) %>%

  mutate(finescale_fishery_term = case_when(
    AREA%in%c("Area 123", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & MONTH%in%c(8:12) ~ "TWCVI S FALL",
    AREA %in%  c("Area 11", "Area 111", "Area 12") & MONTH%in%c(9:12) ~ "TJOHN ST S FALL",
    AREA %in%  c("Area 11", "Area 111", "Area 12") & MONTH%in%c(5:8) ~ "TJOHN ST S SUMMER",
    (AREA%in% c("Area 17", "Area 18", "Area 19", "Area 19 (GS)", "Area 28", "Area 29")  |  REGION2 == "GSS") & MONTH%in%c(9:12) ~ "TSGS S FALL",
    (AREA%in% c("Area 17", "Area 18", "Area 19", "Area 19 (GS)", "Area 28", "Area 29")  |  REGION2 == "GSS") & MONTH%in%c(5:8) ~ "TSGS S SUMMER",
    (AREA%in% c("Area 13", "Area 14", "Area 15", "Area 16") |  REGION2 == "GSN") & MONTH%in%c(9:12) ~ "TNGS S FALL",
    (AREA%in% c("Area 13", "Area 14", "Area 15", "Area 16") |  REGION2 == "GSN") & MONTH%in%c(5:8) ~ "TNGS S SUMMER",
    (AREA %in%c("Area 19", "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)")  | REGION2 == "JDF") & MONTH%in%c(5:8) ~ "TCA JDF S SUMMER")) %>%

  mutate(finescale_fishery_old = case_when(
    AREA%in%c("Area 121", "Area 123", "Area 124", "Area 125", "Area 126", "Area 127") & MANAGEMENT=="AABM" & MONTH%in%c(1:12) ~ "WCVI AABM S",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & MONTH%in%c(1:7, 10:12) ~ "WCVI AABM S",
    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(1:6, 10:12) ~ "WCVI AABM S",
    AREA%in%c("Area 121", "Area 123", "Area 124", "Area 125", "Area 126", "Area 127") & MANAGEMENT=="ISBM" & MONTH%in%c(7:12) ~ "WCVI ISBM S",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)") & MONTH%in%c(8,9) ~ "WCVI ISBM S",
    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(7,8,9) ~ "WCVI ISBM S",
    (AREA %in%c("Area 13", "Area 14", "Area 15", "Area 16") |REGION2== "GSN")& MONTH%in%c(1:12) ~ "NGS S",
    (AREA %in%c("Area 17", "Area 18", "Area 19", "Area 19 (GS)", "Area 28", "Area 29") |REGION2== "GSS")& MONTH%in%c(1:12) ~ "SGS S",
    (AREA %in% c("Area 11", "Area 111", "Area 12") | REGION2 == "JST") & MONTH%in%c(1:12) ~ "JNST S",
    AREA %in% c("Area 10", "Area 106", "Area 110", "Area 6", "Area 7", "Area 8", "Area 9", "Area 130", "Area 108", "Area 109", "Area 107")& MONTH%in%c(1:12)  ~ "CBC S",
    AREA %in% c("Area 2","Area 1", "Area 101", "Area 102",  "Area 142", "Area 2E", "Area 2W")& MONTH%in%c(1:12)  ~ "NBC AABM S",
    AREA %in% c( "Area 103", "Area 104", "Area 105", "Area 3", "Area 4", "Area 5")& MONTH%in%c(1:12)  ~ "NBC ISBM S",
    (AREA %in% c("Area 19", "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)") | REGION2 == "JDF") & MONTH%in%c(1:12) ~ "CA JDF S")) %>%

  mutate(finescale_fishery_old_term = case_when(
    AREA%in%c("Area 123", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & MONTH%in%c(8:12) ~ "TWCVI S",
    AREA %in%  c("Area 11", "Area 111", "Area 12") & MONTH%in%c(5:12) ~ "TJOHN ST S",
    (AREA%in% c("Area 17", "Area 18", "Area 19", "Area 19 (GS)", "Area 28", "Area 29")  |  REGION2 == "GSS") & MONTH%in%c(5:12) ~ "TSGS S",
    (AREA%in% c("Area 13", "Area 14", "Area 15", "Area 16") |  REGION2 == "GSN") & MONTH%in%c(5:12) ~ "TNGS S",
    (AREA %in%c("Area 19", "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)")  | REGION2 == "JDF") & MONTH%in%c(5:8) ~ "TCA JDF S"))


```

-   We also identified a fishery specific consistently creel or logbooked coverage period for the summer period

    -   This is where there is consistent data throughout the time series (from 2005 to 2023) from the creel + logbook data

    -   This consistent chunk of data will be used to predict the estimated catch in the section of the time series where we don't have iREC

    -   The summer coverage period included all months within 6:8 that are consistent through the timeseries.

```{r Assigning seasonal coverage}
 Sport_mark_rate_finescale<- Sport_mark_rate_finescale %>% ungroup %>% 
   mutate(summer_coverage_tf = case_when(
                                                                finescale_fishery_old == "CA JDF S" & MONTH %in% c(6:8) & YEAR != 2020 ~ "yes",
                                                                finescale_fishery_old == "JNST S" & MONTH %in% c(6:8) & YEAR != 2020 ~ "yes",
                                                                finescale_fishery_old == "NGS S" & MONTH %in% c(6:8) & YEAR != 2020 ~ "yes",
                                                                finescale_fishery_old == "SGS S" & MONTH %in% c(6,8) & YEAR %notin% c(2016, 2020) ~ "yes",
                                                                finescale_fishery_old == "WCVI ISBM S" & MONTH %in% c(7:8) ~ "yes",
                                                                finescale_fishery_old == "WCVI AABM S" & MONTH %in% c(6:8)& YEAR != 2020 ~ "yes",
                                                                finescale_fishery_old == "CBC S" & MONTH %in% c(6:8) ~ "yes",
                                                                finescale_fishery_old == "NBC AABM S" & MONTH %in% c(6:8) ~ "yes",
                                                                finescale_fishery_old == "NBC ISBM S" & MONTH %in% c(6:8) ~ "yes",
                                                                .default = "no")) %>%
                                                           mutate(summer_coverage_tf_term = case_when(
                                                             finescale_fishery_old_term == "TCA JDF S" & MONTH %in% c(6:8) & YEAR != 2020 ~ "yes",
                                                             finescale_fishery_old_term == "TJOHN ST S" & MONTH %in% c(6:8) & YEAR != 2020 ~ "yes",
                                                             finescale_fishery_old_term == "TNGS S" & MONTH %in% c(6:8) & YEAR != 2020 ~ "yes",
                                                             finescale_fishery_old_term == "TSGS S" & MONTH %in% c(6,8) & YEAR %notin% c(2016, 2020) ~ "yes",
                                                                 finescale_fishery_old_term == "TWCVI S" & MONTH %in% c(8) ~ "yes",

                                                             TRUE ~ "no"))
```

-   We sum up catch by mark and kept status for each year and new finescale fishery of the defined coverage periods for creel and for the previously calculated catch estimate. This is the data used in the modelling exercise described below.

```{r combining seasons and terminal}
Sport_mark_rate_finescale_sum<- Sport_mark_rate_finescale %>%
  filter(!is.na(finescale_fishery)) %>%
  group_by(YEAR, status, finescale_fishery_old, finescale_fishery) %>%
  summarise_at(vars(creel:catch_estimate), sum, na.rm=TRUE)

Sport_creel_finescale_summer<- Sport_mark_rate_finescale %>%
  filter(!is.na(finescale_fishery_old), summer_coverage_tf=="yes") %>%
  group_by(YEAR, status, finescale_fishery_old) %>%
  summarise_at(vars(creel_plus), sum, na.rm=TRUE) %>%
  rename(creel_plus_summer=creel_plus)

Sport_mark_rate_finescale_term_sum<- Sport_mark_rate_finescale %>%
  filter(!is.na(finescale_fishery_old_term)) %>%
  group_by(YEAR, status, finescale_fishery_old_term, finescale_fishery_term) %>%
  summarise_at(vars(creel:catch_estimate), sum, na.rm=TRUE) %>%
  rename(finescale_fishery = finescale_fishery_term,
         finescale_fishery_old = finescale_fishery_old_term)

Sport_creel_finescale_term_summer<- Sport_mark_rate_finescale %>%
  filter(!is.na(finescale_fishery_old_term), summer_coverage_tf_term=="yes") %>%
  group_by(YEAR, status, finescale_fishery_old_term) %>%
  summarise_at(vars(creel_plus), sum, na.rm=TRUE) %>%
  rename(creel_plus_summer=creel_plus) %>%
  rename(finescale_fishery_old = finescale_fishery_old_term)


#Year, finescale fishery
Sport_creel_summer<- bind_rows(Sport_creel_finescale_term_summer, Sport_creel_finescale_summer)
Sport_creel_all_seasons <- Sport_creel_summer

Sport_mark_rate_finescale_combined<-bind_rows(Sport_mark_rate_finescale_term_sum, Sport_mark_rate_finescale_sum)

Sport_mark_rate_finescale_combined<-left_join(Sport_mark_rate_finescale_combined, Sport_creel_all_seasons)


Sport_mark_rate_finescale_combined<-Sport_mark_rate_finescale_combined %>% mutate(mark_status = case_when(
  status %in% c("marked_Kept_total", "marked_Released_total") ~ "marked",
  TRUE ~ "unmarked"
))%>% mutate(kept_status = case_when(
  status %in% c("marked_Kept_total", "unmarked_Kept_total") ~ "Kept",
  TRUE ~ "Released"
))

#re-write season to be determined by fishery
Sport_mark_rate_finescale_combined<-Sport_mark_rate_finescale_combined %>% mutate(season = case_when(
  str_detect(finescale_fishery, "SUMMER")  ~ "summer",
  str_detect(finescale_fishery, "SPRING")  ~ "spring",
  str_detect(finescale_fishery, "FALL")  ~ "fall"))


```

# Visualization

-   Alternatively, we can add up the catch to get total catch estimates across fisheries by month.

```{r summarizing by old finescale fishery}
yearMonth <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "finescale_fishery_old"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% filter(finescale_fishery_old!="NA") %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


yearMonth_catch_estimate_1<-yearMonth %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

yearMonth_irec_1<-yearMonth %>% filter(sum_catch_estimate==sum_irec)

# terminal 
yearMonth_term <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "finescale_fishery_old_term"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% filter(finescale_fishery_old_term!="NA") %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


yearMonth_catch_estimate_1_term<-yearMonth_term %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

yearMonth_irec_1_term<-yearMonth_term %>% filter(sum_catch_estimate==sum_irec)


#Combining

yearMonth_term<-yearMonth_term %>% rename(finescale_fishery_old= finescale_fishery_old_term)
yearMonth_catch_estimate_1_term<-yearMonth_catch_estimate_1_term%>% rename(finescale_fishery_old= finescale_fishery_old_term)
yearMonth_irec_1_term<-yearMonth_irec_1_term %>% rename(finescale_fishery_old= finescale_fishery_old_term)

yearMonth_all<-rbind(yearMonth, yearMonth_term)
yearMonth_catch_estimate_1_all<-rbind(yearMonth_catch_estimate_1, yearMonth_catch_estimate_1_term)
yearMonth_irec_1_all<-rbind(yearMonth_irec_1, yearMonth_irec_1_term)

```

-   We can visualize this as creel and logbook only information and look for where there are gaps in coverage

```{r plotting coverage of creel and logbook only, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8, fig.width=10}

g1<-ggplot()+
  geom_tile(data=yearMonth_all, aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth_all, aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear, limits=c(0,50000))+
    facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage by finescale fishery",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

g1

```

-   We can then add on irec data to see where irec adds information

-   We see that almost always a creel- irec combination (blue) or irec (red) on its own will be chosen as the best estimate for the whole month. This is because there are typically a few PFMAs in the larger fishery that are not creeled in each month.

```{r plotting coverage including irec, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8, fig.width=10}

g3<-ggplot()+
  geom_tile(data=yearMonth_all, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear, limits=c(0,90000)) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel or logbook estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1_all, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4,  na.value = colclear, limits=c(0,90000))+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1_all, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6,  na.value = colclear, limits=c(0,90000))+
  facet_wrap(~finescale_fishery_old)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(title = "Coverage by finescale fishery",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

g3
```

# Modelling

-   Now we take the chunks of summer, spring, fall consistently creeled or logbooked data between 2013 and 2023 and establish a relationship via a model with the irec based catch estimate.

-   We investigate various models using a systematic approach:

    -   One model for each of pre-terminal and terminal fisheries since they use overlapping datasets so can't be included in the same model

    -   We didn't consider random effects models since we don't have enough levels of each factor to warrant random effects inclusion (need \>10 typically)

    -   For all candidate models we used the DHARMa package to create a qq-plot to detect deviations in observations from expected distribution and a plot of the residuals against predicted values to detect patterns in residuals. We visually assessed whether candidate models improved plots.

    -   We also compared candidate models using AIC, a lower AIC indicating a better model fit.

    -   The order of comparisons was as follows:

        -   First we compared three distributions: normal (gaussian), poisson, and Gamma distribution to see which fit our data the best on the full model. These distributions are all consistent with our positive, continuous data

            $$
            catch = creel.summer * mark.status * kept.status * finescale.fishery * season
            $$

        -   Next, using the chosen distribution, we compared the full model with all terms to models with each of the terms dropped sequentially

        -   We selected the model with the lowest AIC and best visual diagnostics.

## Pre-terminal fisheries 

-   The best model was one without kept-status:

    $$
    catch = creel.summer * mark.status * finescale.fishery * season
    $$

```{r Modelling all seasonal southern BC fisheries, message=FALSE, warning=FALSE, results='hold'}

#Summer model
Season_south<-Sport_mark_rate_finescale_combined%>% filter(YEAR %in% c(2013:2023), finescale_fishery %notin% c("TCA JDF S SUMMER", "TJOHN ST S SUMMER", "TNGS S SUMMER", "TSGS S SUMMER", "TWCVI S FALL", "TJOHN ST S FALL", "TNGS S FALL", "TSGS S FALL"))

# See modelling script for full model results: chosen model is: summer model full Gamma 

Season_model_gamma_dropkept<- glm(formula = catch_estimate + 1 ~creel_plus_summer*mark_status*finescale_fishery_old*season,  family=Gamma(link = "log"), data = Season_south)
res_gam_dropkept <- simulateResiduals(Season_model_gamma_dropkept, plot = T, quantreg=T)

#summary(Season_model_gamma_dropkept)

#Adding predicted data
Season_south_old<- Sport_mark_rate_finescale_combined %>% filter(YEAR %in% c(2005:2012), finescale_fishery %notin% c("TCA JDF S SUMMER", "TJOHN ST S SUMMER", "TNGS S SUMMER", "TSGS S SUMMER", "TWCVI S FALL", "TJOHN ST S FALL", "TNGS S FALL", "TSGS S FALL")) %>% ungroup() %>% mutate(pred_cat = "predicted")
Season_south_old_new<-predict.glm(Season_model_gamma_dropkept, newdata =  Season_south_old, type = "response")
Season_south_old_new_2<-Season_south_old %>%   mutate(catch_estimate_predicted = Season_south_old_new)

Season_south2<-Season_south %>% mutate(catch_estimate_predicted = catch_estimate, pred_cat= "observed")

Season_south_combined<- rbind(Season_south_old_new_2, Season_south2)

```

-   summarizing

```{r summarizing}
yearMonth2_season <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "finescale_fishery"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% filter(finescale_fishery!="NA") %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


yearMonth_catch_estimate_2_season<-yearMonth2_season %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

yearMonth_irec_2_season<-yearMonth2_season %>% filter(sum_catch_estimate==sum_irec)

resize <- function(g, fig_width=NA, fig_height=NA) {
  
  g_deparsed <- paste0(deparse(function() g), collapse = '')
  sub_chunk <- paste0("`","``{r sub_chunk_", floor(runif(1) * 10000), ", fig.height=", fig_height, ", fig.width=", fig_width, ", warning=FALSE, echo=FALSE}","\n(", g_deparsed, ")()","\n`","``")
  cat(knitr::knit(text = knitr::knit_expand(text = sub_chunk), quiet = TRUE))
  
}


```

-   forloop

```{r forloop seasonal, results='asis', echo=FALSE}

yearMonth2_season<- yearMonth2_season %>% filter(!str_detect(finescale_fishery, "CBC|NBC"))
fishery_name<- unique(yearMonth2_season$finescale_fishery)

  
for (i in 1:length(fishery_name)){
 
  cat("\n\n")
  cat("### ", paste0("", fishery_name[fishery_name== fishery_name[i]], " "),"\n\n") 
  
p1<-ggplot()+
  geom_tile(data=yearMonth2_season %>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  geom_tile(data=yearMonth2_season  %>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  labs(title = paste("Coverage for", fishery_name[i]),
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013) 

p2<-ggplot()+
  geom_tile(data=yearMonth2_season %>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth2_season%>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_2_season%>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_2_season%>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)


p<-p1+p2 + plot_layout(guides = "collect") & theme(legend.position = 'none')

cat("\n\n")
resize(p, 5, 2)

#Predicted model plot
g<-ggplot(Season_south_combined %>% filter(finescale_fishery==fishery_name[i]), aes(x=creel_plus_summer, y= catch_estimate_predicted+1, col=mark_status, fill=mark_status, shape=pred_cat))+geom_point(size=2.5)+
  geom_smooth(method="glm", method.args = list(family= Gamma(link = "log")), fullrange=TRUE) + facet_wrap(~mark_status, scales="free") + ggtitle(paste(fishery_name[i])) + theme_bw() + scale_colour_viridis_d(option = "turbo") + scale_fill_viridis_d(option = "turbo")

cat("\n\n")
 resize(g, 7, 3)
 
 
 m<-ggplot(Season_south_combined %>% filter(finescale_fishery==fishery_name[i])) +
    geom_point(size=2.5,  aes(y=creel_plus, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=creel_plus, x=YEAR,col=status, linetype = "Creel and logbook only"))+ 
    scale_shape_manual(values=c(1,1))+
    new_scale("shape")+
    scale_colour_viridis_d()+
    geom_point(size=2.5, aes(y=catch_estimate_predicted, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=catch_estimate_predicted, x=YEAR,col=status, linetype = "iREC included"))+ 
    scale_shape_manual(values=c(16,17))+
    scale_linetype_manual(values=c(2,1))+
    facet_wrap(~status, scales="free") + ggtitle(paste(fishery_name[i])) + theme_bw()
 
cat("\n\n") 
resize(m, 7, 4)
 cat("\n\n\n")
}

```

## Terminal Fisheries

-   The best model was one without kept status

```{r Modelling Terminal Summer BC fisheries, message=FALSE, warning=FALSE}

Season_terminal<- Sport_mark_rate_finescale_combined %>% filter(YEAR %in% c(2013:2023), finescale_fishery %in% c("TCA JDF S SUMMER", "TJOHN ST S SUMMER", "TNGS S SUMMER", "TSGS S SUMMER", "TCA JDF S FALL", "TJOHN ST S FALL", "TNGS S FALL", "TSGS S FALL", "TWCVI S FALL"))

#Gamma full model is the best 
Season_terminal_model_gamma_dropkept<- glm(formula = catch_estimate+1 ~creel_plus_summer*mark_status*finescale_fishery_old*season,  family=Gamma(link = "log"), data = Season_terminal)
res_gam_dropkept <- simulateResiduals(Season_terminal_model_gamma_dropkept, plot = T, quantreg=T)
summary(Season_terminal_model_gamma_dropkept)

#Adding predicted data
Season_terminal_old<- Sport_mark_rate_finescale_combined %>% filter(YEAR %in% c(2005:2012), finescale_fishery %in% c("TCA JDF S SUMMER", "TJOHN ST S SUMMER", "TNGS S SUMMER", "TSGS S SUMMER")) %>% ungroup() %>% mutate(pred_cat = "predicted") 
Season_terminal_old_new<-predict.glm(Season_terminal_model_gamma_dropkept, newdata =  Season_terminal_old, type = "response")
Season_terminal_old_new_2<-Season_terminal_old %>%   mutate(catch_estimate_predicted = Season_terminal_old_new)

Season_terminal2<-Season_terminal %>% mutate(catch_estimate_predicted = catch_estimate, pred_cat= "observed")

Season_terminal_combined<- rbind(Season_terminal_old_new_2, Season_terminal2)

```

-   summarizing by terminal finescale fishery

```{r sumarizing term}
# terminal 
yearMonth_term2 <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "finescale_fishery_term"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% filter(finescale_fishery_term!="NA") %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


yearMonth_catch_estimate_2_term<-yearMonth_term2 %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

yearMonth_irec_2_term<-yearMonth_term2 %>% filter(sum_catch_estimate==sum_irec)
```

```{r forloop Season terminal,  results='asis', echo=FALSE}
yearMonth2_term<- yearMonth_term2 %>% filter(!str_detect(finescale_fishery_term, "CBC|NBC"))
fishery_name<- unique(yearMonth2_term$finescale_fishery_term)
 
for (i in 1:length(fishery_name)){
 
  cat("\n\n")
  cat("### ", paste0("", fishery_name[fishery_name== fishery_name[i]], ""),"\n\n") 
  
p1<-ggplot()+
  geom_tile(data=yearMonth_term2 %>% filter(finescale_fishery_term==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  geom_tile(data=yearMonth_term2  %>% filter(finescale_fishery_term==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  labs(title = paste("Coverage for", fishery_name[i]),
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

p2<-ggplot()+
  geom_tile(data=yearMonth_term2 %>% filter(finescale_fishery_term==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth_term2%>% filter(finescale_fishery_term==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_2_term%>% filter(finescale_fishery_term==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_2_term%>% filter(finescale_fishery_term==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)


p<-p1+p2+ plot_layout(guides = "collect")& theme(legend.position = 'none')

cat("\n\n")
resize(p, 5, 2)
 
#Predicted model plot
g<-ggplot(Season_terminal_combined %>% filter(finescale_fishery==fishery_name[i]), aes(x=creel_plus_summer, y= catch_estimate_predicted+1, col=mark_status, fill=mark_status, shape=pred_cat))+geom_point(size=2.5)+
  geom_smooth(method="glm", method.args = list(family= Gamma(link = "log")), fullrange=TRUE) + facet_wrap(~mark_status, scales="free") + ggtitle(paste(fishery_name[i])) + theme_bw() + scale_colour_viridis_d(option = "turbo") + scale_fill_viridis_d(option = "turbo")

cat("\n\n")
  resize(g, 7, 3)
  
  m<-ggplot(Season_terminal_combined %>% filter(finescale_fishery==fishery_name[i])) +
    geom_point(size=2.5,  aes(y=creel_plus, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=creel_plus, x=YEAR,col=status, linetype = "Creel and logbook only"))+ 
    scale_shape_manual(values=c(1,1))+
    new_scale("shape")+
    scale_colour_viridis_d()+
    geom_point(size=2.5, aes(y=catch_estimate_predicted, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=catch_estimate_predicted, x=YEAR,col=status, linetype = "iREC included"))+ 
    scale_shape_manual(values=c(16,17))+
    scale_linetype_manual(values=c(2,1))+
    facet_wrap(~status, scales="free") + ggtitle(paste(fishery_name[i])) + theme_bw()
 
 
cat("\n\n") 
resize(m, 7, 4)
  cat("\n\n\n")
  }

```

# CBC and NBC

### Central BC - CBC S

-   Good coverage 6:8 only, maybe 9 if omit a couple years

-   irec bumps this out by a few months but not all year

```{r CBC S, echo=FALSE, message=FALSE, warning=FALSE}
CBC_1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for CBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

CBC_2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

CBC_1+CBC_2+ plot_layout(guides = "collect")
```

### Northern BC - NBC AABM S

-   Missing 2005-2009. Should be able to get that.
-   Good coverage 5-9 , irec bumps out to whole year

```{r NBC AABM, echo=FALSE, message=FALSE, warning=FALSE}
NBC_1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for NBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs( x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_1+NBC_2+ plot_layout(guides = "collect")
```

### Northern BC - NBC ISBM

-   Missing a lot of data both before and after 2012.
-   Data appears to be 5:8 only, irec expands to all year

```{r NBC ISBM, echo=FALSE, message=FALSE, warning=FALSE}
NBC_ISBM1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for NBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_ISBM2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs( x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_ISBM1+NBC_ISBM2+ plot_layout(guides = "collect")
```
