---
title: "Canadian Sport Data revisions"
author: "Norah Brown"
date: today

editor: visual
execute: 
  warning: false

theme: litera
 
format:
  html:
    page-layout: full
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
toc: true
toc-depth: 4
toc-location: left
---

# Introduction

Recreational catch estimation in British Columbia has historically been accomplished using a combination of creel surveys and logbook programs. Creel surveys involve overflights to determine effort and dockside fisher interviews. This data is supplemented by logbook programs where guides and lodges voluntarily submit catch data. However, there are substantial spatial and temporal gaps in the creel and logbook data, which targets the most heavily fished areas and months. A mandatory Internet Recreational Effort and Catch (iREC) survey was introduced in 2013 to resolve these gaps.

iREC is an online sport catch reporting system that randomly selects recreational licence holders to self-report kept and released fish by adipose clip status for a given month of the year. This survey covers all months and regions. License holders also report if they did not fish which is equally as important as reported catch. The values from iREC are calibrated against creel survey estimates and combined to fill in spatial and temporal gaps where there are no creel or logbook programs but fishing does occur. These data have been variably incorporated into the recreational catch since 2013 in most regions domestically, but this incorporation has not occurred in a standardized way. Furthermore, iREC has not be incorporated in catch estimates prior to 2013. The Pacific Salmon Treaty outlines a 2009-2015 base period for calculating calendar year exploitation rate (CYER). This base period currently combines incongruous data sources (a mix of yearly iREC-incorporated and yearly catch estimates without iREC) and creates a bias when comparing to current data (yearly iREC-incorporated catch estimates).

Here, we present (1) a standardized method for combining quality-controlled creel and iREC data in years where both sources exist (2013-present) to generate the best recreational catch estimate by month and area, which is then rolled up to year and finescale fishery levels. (2) Next, in years where iREC is unavailable (before 2013), we model iREC-incorporated seasonal catch estimates by finescale fishery using the relationship between summertime creel estimates without iREC and seasonal iREC-incorporated catch estimates from 2013-2023. These seasonal estimates are then rolled up into yearly estimates.

# Methods (1): Combining iREC and creel estimates

```{r Loading packages, useful functions, message=FALSE, warning=FALSE, results='hide', echo=FALSE}
#load packages
library(tidyverse)
library(odbc)
library(lubridate)
library(ggnewscale)
library(patchwork)
library(DHARMa)
library(lme4)
library(bbmle)
library(SuppDists)
library(MuMIn)

#utils
"%notin%" <- Negate("%in%")

col1 = "#d8e1cf"
col2 = "#438484"
col3 = "lightblue"
col4 = "lightblue4"
col5 = "pink"
col6 = "darkred"
colclear= "#1C00ff00"

resize <- function(g, fig_width=NA, fig_height=NA) {
  g_deparsed <- paste0(deparse(function() g), collapse = '')
  sub_chunk <- paste0("`","``{r sub_chunk_", floor(runif(1) * 10000), ", fig.height=", fig_height, ", fig.width=", fig_width, ", warning=FALSE, echo=FALSE}","\n(", g_deparsed, ")()","\n`","``")
  cat(knitr::knit(text = knitr::knit_expand(text = sub_chunk), quiet = TRUE))
}

Sport_mark_rate_finescale<-read_rds("Sport_mark_rate_finescale.RDS")

Sport_mark_rate_finescale_combined<-read_rds("Sport_mark_rate_finescale_combined.RDS")

models_combined<- read_rds("models_combined.RDS")

Season_south_no_nas<-read_rds("Season_south_no_nas.RDS")
Summer_south_no_nas<-read_rds("Summer_south_no_nas.RDS")
Season_north_aabm_no_nas<-read_rds("Season_north_aabm_no_nas.RDS")
Season_north_isbm_no_nas<-read_rds("Season_north_isbm_no_nas.RDS")
Season_cbc_isbm_no_nas<-read_rds("Season_cbc_isbm_no_nas.RDS")
Summer_north_aabm_no_nas<-read_rds("Summer_north_aabm_no_nas.RDS")
Summer_north_isbm_no_nas<-read_rds("Summer_north_isbm_no_nas.RDS")

Season_south_combined<-read_rds("Season_south_combined.RDS")
Summer_south_combined<-read_rds("Summer_south_combined.RDS")
Season_north_aabm_combined<-read_rds("Season_north_aabm_combined.RDS")
Summer_north_aabm_combined<-read_rds("Summer_north_aabm_combined.RDS")
Season_north_isbm_combined<-read_rds("Season_north_isbm_combined.RDS")
Season_cbc_isbm_combined<-read_rds("Season_cbc_isbm_combined.RDS")
Summer_north_isbm_combined<-read_rds("Summer_north_isbm_combined.RDS")


```

Note: should be used going forward

## Loading and filtering data

We pulled raw recreational catch data from the CREST database. This database stores creel, logbook, and iREC data for both marine and freshwater regions. We filtered the data to contain only marine estimates for legal-sized marked and unmarked fish kept and released. We loaded in data from Northern and Central BC separately since the information in CREST is incomplete for these regions.

Following the method used for iREC calibration (see DFO iREC report), we filtered the creel data based on quality criteria in a given area and month. Each monthly creel estimate included in our data was required to meet each of the following criteria:

-   At least 3 flights for each type of day (weekday or weekend)
-   At least 25 interviews mid week OR at least 10% of interviews from mid-week
-   At least 25 interviews on weekends OR at least 10% of interviews from weekend
-   At least 15 day spread in flights
-   At least 15 day spread in interviews

This quality control was to avoid situations where a monthly estimate was generated by expanding from only a small number of days which increases uncertainty. The filtered creel estimates were then augmented with logbook data where available (logbook and creel estimates were summed).

## Extrapolating unchecked catch by mark rate

Data is typically collected in number of marked and unmarked fish kept and released. However, when mark status is unknown, the catch estimates can be provided as unchecked kept and unchecked released catch. We extrapolated these unchecked estimates to marked and unmarked catch using mark rate.

We calculated mark rate in a number of different ways and prioritize the assignment of mark rate in the following order:

1.  Monthly area calculation - Mark rate calculated for a given source (iREC, creel, or logbook) within a given year, month, and area
2.  Monthly average by source - Mark rate calculated within a given year, month, and area, averaged across sources
3.  Monthly regional average - Mark rate calculated for a given source within a given year, month, and region (averaged across areas within a region)
4.  Seasonal area average - Mark rate calculated for a given source (iREC, creel, or logbook) within a given year, season, and area
5.  Seasonal regional average -Mark rate calculated for a given source within a given year, season, and region
6.  Monthly area average across years - Mark rate calculated for a given source within a given month, area, and across years
7.  Monthly regional average across years- Mark rate calculated for a given source within a given month, region, and across years

## Aligning iREC and creel estimates

There are a few areas that were initially not split by the iREC system into their component parts, as done in the creel database. These include areas 2, 19, 20, and 23. We therefore combined data from 2013 until the split was successfully incorporated into iREC (2014 for Areas 2,19, and 23; 2020 for Area 20).

## Combining iREC and creel estimates

We used the following rules to choose the best catch estimate between creel (augmented with logbook data) and calibrated iREC:

For Southern BC:

-   In months May-September (5-9) use creel+ logbook, otherwise use calibrated iREC

-   In months outside of 5-9, use calibrated iREC

For Northern and Central BC:

-   Use calibrated iREC

These rules prioritize quality-controlled creel estimates during months where the most creel effort is concentrated, and then prioritizes iREC data during shoulder seasons and anywhere there is a gap in creel coverage. Northern and Central BC do not have standardized creel

## Visualization

Here put the visuals for by PFMA

```{r PFMA plotting coverage of creel and logbook only, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8, fig.width=10}

pfma_yearMonth <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "AREA", "finescale_fishery_old"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


pfma_yearMonth_catch_estimate_1<-pfma_yearMonth  %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

pfma_yearMonth_irec_1<-pfma_yearMonth  %>% filter(sum_catch_estimate==sum_irec)



g<-ggplot()+
  geom_tile(data=pfma_yearMonth, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear, limits=c(0,90000)) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel or logbook estimates")) +
  new_scale_fill() +
  geom_tile(data=pfma_yearMonth_catch_estimate_1, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4,  na.value = colclear, limits=c(0,90000))+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=pfma_yearMonth_irec_1, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6,  na.value = colclear, limits=c(0,90000))+
  facet_wrap(~AREA)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(title = "Coverage by PFMA",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

g
```

Alternatively, we can add up the catch to get total catch estimates across fisheries by month.

```{r summarizing by old finescale fishery, message=FALSE, warning=FALSE, results='hide', echo=FALSE}
yearMonth <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "finescale_fishery_old"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% filter(finescale_fishery_old!="NA") %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


yearMonth_catch_estimate_1<-yearMonth %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

yearMonth_irec_1<-yearMonth %>% filter(sum_catch_estimate==sum_irec)

```

-   We can visualize this as creel and logbook only information and look for where there are gaps in coverage

```{r plotting coverage of creel and logbook only, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8, fig.width=10}

g1<-ggplot()+
  geom_tile(data=yearMonth, aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth, aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear, limits=c(0,50000))+
    facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage by finescale fishery",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

g1

```

-   We can then add on irec data to see where irec adds information

-   We see that almost always a creel- irec combination (blue) or irec (red) on its own will be chosen as the best estimate for the whole month. This is because there are typically a few PFMAs in the larger fishery that are not creeled in each month.

```{r plotting coverage including irec, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8, fig.width=10}

g3<-ggplot()+
  geom_tile(data=yearMonth, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear, limits=c(0,90000)) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel or logbook estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4,  na.value = colclear, limits=c(0,90000))+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6,  na.value = colclear, limits=c(0,90000))+
  facet_wrap(~finescale_fishery_old)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(title = "Coverage by finescale fishery",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

g3
```

# Modelling

-   Splitting fisheries by season

    -   Assign previous finescale fisheries to the catch data using PFMAs and month

    -   Assign new finescale fisheries (including terminal) to the catch data using PFMAs and season

    -   Generally seasonal fisheries fall into the pre-defined categories - spring is months 1:4, summer 5:9 and fall 10:12, with a few exceptions - the WCVI ISBM fisheries are shorter length.

    -   We also identified a fishery specific consistently creel or logbooked coverage period for the summer period

        -   This is where there is consistent data throughout the time series (from 2005 to 2023) from the creel + logbook data

        -   This consistent chunk of data will be used to predict the estimated catch in the section of the time series where we don't have iREC

        -   The summer coverage period included all months within 6:8 that are consistent through the timeseries.

    -   We sum up catch by mark and kept status for each year and new finescale fishery of the defined coverage periods for creel and for the previously calculated catch estimate. This is the data used in the modelling exercise described below.

    -   We also calculate creel effort - a proportion of months and areas in a given finescale fishery that we surveyed using creel or logbooks. This is used in the modelling efforts below.

-   

-   

-   Now we take the chunks of summer, spring, fall consistently creeled or logbooked data between 2013 and 2023 and establish a relationship via a model with the irec based catch estimate.

-   We investigate various models using a systematic approach:

    -   One model for spring and fall pre-terminal sport fisheries since these are iREC-only data

    -   One model for summer pre-terminal sport fisheries since these are iREC and creel combined data

    -   Same dataset tested for all models - therefore done without NAs

    -   We didn't consider random effects models since we don't have enough levels of each factor to warrant random effects inclusion (need \>10 typically)

    -   For all candidate models we used the DHARMa package to create a qq-plot to detect deviations in observations from expected distribution and a plot of the residuals against predicted values to detect patterns in residuals. We visually assessed whether candidate models improved plots.

    -   We also compared candidate models using AIC, a lower AIC indicating a better model fit.

    -   The order of comparisons was as follows:

        -   First we compared three distributions: normal (gaussian), poisson, and Gamma distribution to see which fit our data the best on the full model. These distributions are all consistent with our positive, continuous data

            $$
            catch = creel.summer * status * finescale.fishery * season * creel.effort
            $$

        -   Next, using the chosen distribution, we compared the full model with all terms to models with each of the terms dropped sequentially except for creel.summer which was our main interest. We did this first by dropping out full terms from the full interaction model, then used the dredge function in MuMIn to sequentially drop out the various sub-interactions

        -   We selected the model with the lowest AIC and best visual diagnostics.

## Pre-terminal Spring and Fall fisheries

-   The best model was one with a gamma distribution
-   Next, we investigated if the fully interactive model is better than a subset of interactions. We used the dredge function from the MuMin package to sequentially drop terms (including all interactions).
-   The best model included summer creel, marked and kept status, finescale fishery, and season and various interactions of these terms
-   $$
    catch = creel.summer+finescale.fishery+season+status+                                               creel.summer:finescale.fishery  + creel.summer:status+                                               finescale.fishery:season
    $$

```{r Modelling spring and fall subsetting, message=FALSE, warning=FALSE, results='hide', echo=FALSE}

Season_south_sf<-Sport_mark_rate_finescale_combined %>%
                 filter(YEAR %in% c(2013:2023))%>%
                 filter(!str_detect(finescale_fishery, "CBC|NBC")) %>%
                 filter(season %in% c("spring", "fall"))


#Modelling comparisons need to be done on models with same # of NAs - so drop nas
Season_south_no_nas<-Season_south_sf %>% drop_na(any_of(c("creel_plus_summer", "mark_status","status", "finescale_fishery_old", "season", "creel_effort", "kept_status")))




Season_model_gamma_full_spec<- glm(formula =catch_estimate + 3 ~ finescale_fishery_old + season +status + creel_plus_summer:finescale_fishery_old + creel_plus_summer:status +finescale_fishery_old:season + 1 + creel_plus_summer,  family=Gamma(link = "log"), data = Season_south_no_nas)

res_gam_drop_kept_effort_spec <- simulateResiduals(Season_model_gamma_full_spec, plot = T, quantreg=T)
#summary(Season_model_gamma_full_spec)


```

```{r Modelling all spring and fall southern BC fisheries, message=FALSE, warning=FALSE, results='hold'}

#Adding predicted data to the modelled set
Season_south_old_sf<- Sport_mark_rate_finescale_combined %>% filter(YEAR %in% c(2005:2012)) %>% ungroup() %>% mutate(pred_cat = "predicted") %>% filter(!str_detect(finescale_fishery, "CBC|NBC"))%>%
  filter(season %in% c("spring", "fall"))
Season_south_old_new<-predict.glm(Season_model_gamma_full_spec, newdata =  Season_south_old_sf, type = "response")
Season_south_old_new_2<-Season_south_old_sf %>%   mutate(catch_estimate_predicted = Season_south_old_new)

Season_south2<-Season_south_sf %>% mutate(catch_estimate_predicted = catch_estimate, pred_cat= "observed")
Season_south_combined<- rbind(Season_south_old_new_2, Season_south2)




#### Adding confidence intervals based on model to a dataframe for plotting purposes
#based on this blog: https://fromthebottomoftheheap.net/2018/12/10/confidence-intervals-for-glms/

family.set <- family(Season_model_gamma_full_spec)
ilink.family.set<- family.set$linkinv

want_marked_kept <- seq(1, nrow(Season_south_no_nas %>% filter(status == "marked_Kept_total")), length.out = 1000)
want_marked_released <- seq(1, nrow(Season_south_no_nas %>% filter(status == "marked_Released_total")), length.out = 1000)
want_umarked_kept <- seq(1, nrow(Season_south_no_nas %>% filter(status == "unmarked_Kept_total")), length.out = 1000)
want_umarked_released <- seq(1, nrow(Season_south_no_nas %>% filter(status == "unmarked_Released_total")), length.out = 1000)

mod<-Season_model_gamma_full_spec

ndata_marked_kept <- with(Season_south_no_nas %>% filter(status == "marked_Kept_total"), data_frame(creel_plus_summer= seq(min(creel_plus_summer), max(creel_plus_summer), length = 1000),  status = "marked_Kept_total", season = season[want_marked_kept], finescale_fishery_old=finescale_fishery_old[want_marked_kept], creel_effort=creel_effort[want_marked_kept], finescale_fishery=finescale_fishery[want_marked_kept]))

ndata_marked_released <- with(Season_south_no_nas %>% filter(status == "marked_Released_total"), data_frame(creel_plus_summer= seq(min(creel_plus_summer), max(creel_plus_summer), length = 1000),  status = "marked_Released_total", season = season[want_marked_released], finescale_fishery_old=finescale_fishery_old[want_marked_released], creel_effort=creel_effort[want_marked_released], finescale_fishery=finescale_fishery[want_marked_released]))

ndata_unmarked_kept <- with(Season_south_no_nas %>% filter(status == "unmarked_Kept_total"), data_frame(creel_plus_summer= seq(min(creel_plus_summer), max(creel_plus_summer),length = 1000),  status = "unmarked_Kept_total", season = season[want_umarked_kept], finescale_fishery_old=finescale_fishery_old[want_umarked_kept], creel_effort=creel_effort[want_umarked_kept], finescale_fishery=finescale_fishery[want_umarked_kept]))


ndata_unmarked_released <- with(Season_south_no_nas %>% filter(status == "unmarked_Released_total"), data_frame(creel_plus_summer= seq(min(creel_plus_summer), max(creel_plus_summer), length = 1000),  status =  "unmarked_Released_total", season = season[want_umarked_released], finescale_fishery_old=finescale_fishery_old[want_umarked_released], creel_effort=creel_effort[want_umarked_released], finescale_fishery=finescale_fishery[want_umarked_released]))

ndata<- bind_rows(ndata_marked_kept,ndata_marked_released, ndata_unmarked_kept, ndata_unmarked_released)

## add the fitted values by predicting from the model for the new data
ndata<- add_column(ndata, fit = predict(mod, newdata = ndata, type = 'response'))
ndata<- bind_cols(ndata, setNames(as_tibble(predict(mod, ndata, se.fit = TRUE)[1:2]),
                                                   c('fit_link','se_link')))

ndata <- mutate(ndata,
                fit_resp  = ilink.family.set(fit_link),
                right_upr = ilink.family.set(fit_link + (2 * se_link)),
                right_lwr = ilink.family.set(fit_link - (2 * se_link)))

```

-   summarizing

```{r summarizing spring and fall}
yearMonth2_season <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "finescale_fishery", "season"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% filter(finescale_fishery!="NA") %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


yearMonth_catch_estimate_2_season<-yearMonth2_season %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

yearMonth_irec_2_season<-yearMonth2_season %>% filter(sum_catch_estimate==sum_irec)


```

-   Produced seasonal plots

```{r forloop seasonal spring and fall, results='asis', echo=FALSE}

yearMonth2_season_south<- yearMonth2_season %>% filter(!str_detect(finescale_fishery, "CBC|NBC")) %>%
  filter(season %in% c("spring", "fall"))
fishery_name_south<- sort(unique(yearMonth2_season_south$finescale_fishery))

  
for (i in 1:length(fishery_name_south)){
 
  cat("\n\n")
  cat("### ", paste0("", fishery_name_south[fishery_name_south== fishery_name_south[i]], " "),"\n\n") 
  
p1<-ggplot()+
  geom_tile(data=yearMonth2_season_south %>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  geom_tile(data=yearMonth2_season_south  %>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  labs(title = paste("Coverage for", fishery_name_south[i]),
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013) 

p2<-ggplot()+
  geom_tile(data=yearMonth2_season_south %>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth2_season_south%>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_2_season%>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_2_season%>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)


p<-p1+p2 + plot_layout(guides = "collect") & theme(legend.position = 'none')

cat("\n\n")
resize(p, 5, 2)


#####

dataminmax_marked_kept<- Season_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Kept_total")
dataminmax_marked_released<- Season_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Released_total")
dataminmax_unmarked_kept<- Season_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Kept_total")
dataminmax_unmarked_released<- Season_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Released_total")


g1<-ggplot(Season_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Kept_total"), aes(x=creel_plus_summer,  y= catch_estimate, col=status))+
  geom_point()+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Kept_total"), mapping=aes(y= fit, x=creel_plus_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Kept_total"), mapping=aes(y= fit,x=creel_plus_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
   theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#440154"))+  scale_fill_manual(values=c("#440154"))+
  coord_cartesian(ylim = c(0,max(dataminmax_marked_kept$catch_estimate)), xlim = c(0,max(dataminmax_marked_kept$creel_plus_summer)))

g2<-ggplot(Season_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Released_total"), aes(x=creel_plus_summer,  y= catch_estimate, col=status))+
  geom_point()+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Released_total"), mapping=aes(y= fit, x=creel_plus_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Released_total"), mapping=aes(y= fit,x=creel_plus_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
  theme_bw() +
 scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#31688e"))+  scale_fill_manual(values=c("#31688e"))+
  coord_cartesian(ylim = c(0,max(dataminmax_marked_released$catch_estimate)), xlim = c(0,max(dataminmax_marked_released$creel_plus_summer)))

g3<-ggplot(Season_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Kept_total"), aes(x=creel_plus_summer,  y= catch_estimate, col=status))+
  geom_point()+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Kept_total"), mapping=aes(y= fit, x=creel_plus_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Kept_total"), mapping=aes(y= fit,x=creel_plus_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
  theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#35b779"))+  scale_fill_manual(values=c("#35b779"))+
  coord_cartesian(ylim = c(0,max(dataminmax_unmarked_kept$catch_estimate)), xlim = c(0,max(dataminmax_unmarked_kept$creel_plus_summer)))

g4<-ggplot(Season_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Released_total"), aes(x=creel_plus_summer,  y= catch_estimate, col=status))+
  geom_point()+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Released_total"), mapping=aes(y= fit, x=creel_plus_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Released_total"), mapping=aes(y= fit,x=creel_plus_summer, ymin = right_lwr, ymax = right_upr, fill=status, col=status), alpha = 0.10)+
   theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#fde725"))+  scale_fill_manual(values=c("#fde725"))+
    coord_cartesian(ylim = c(0,max(dataminmax_unmarked_released$catch_estimate)), xlim = c(0,max(dataminmax_unmarked_released$creel_plus_summer)))

g<-g1+g2 + g3+g4 + plot_layout(guides = "collect") 
g
cat("\n\n")
 resize(g, 7, 5)
 
 
 m<-ggplot(Season_south_combined %>% filter(finescale_fishery==fishery_name_south[i])) +
    geom_point(size=2.5,  aes(y=creel_unfiltered_plus, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=creel_unfiltered_plus, x=YEAR,col=status, linetype = " Unfiltered creel and logbook"))+
    scale_shape_manual(values=c(1,1))+
    new_scale("shape")+
    scale_colour_viridis_d()+
    geom_point(size=2.5, aes(y=catch_estimate_predicted, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=catch_estimate_predicted, x=YEAR,col=status, linetype = "iREC included"))+
    scale_shape_manual(values=c(16,17))+
    scale_linetype_manual(values=c(2,1))+
    facet_wrap(~status, scales="free") + ggtitle(paste(fishery_name_south[i])) + theme_bw()
 
 
cat("\n\n") 
resize(m, 7, 5)
 cat("\n\n\n")
}

```

-   forloop for old finescale fisheries

```{r forloop old finescale fisheries spring and fall, results='asis', echo=FALSE, eval=FALSE}

 Season_south_combined_summ_by_kept <-Season_south_combined %>% 
group_by(YEAR, finescale_fishery_old, pred_cat, kept_status) %>% 
 summarise_if(is.numeric, sum, na.rm = TRUE)
  
 fishery_old_name_south<- sort(unique(Season_south_combined_summ_by_kept $finescale_fishery_old))

  
for (i in 1:length(fishery_old_name_south)){
 
  cat("\n\n")
  cat("### ", paste0("", fishery_old_name_south[fishery_old_name_south== fishery_old_name_south[i]], " "),"\n\n") 


 m<-ggplot(Season_south_combined_summ_by_kept %>% filter(finescale_fishery_old ==fishery_old_name_south[i])) +
    geom_point(size=2.5,  aes(y=creel_unfiltered_plus, x=YEAR,col=kept_status, fill=kept_status, shape=pred_cat))+
    geom_line(aes(y=creel_unfiltered_plus, x=YEAR,col=kept_status, linetype = " Unfiltered creel and logbook"))+
    scale_shape_manual(values=c(1,1))+
    new_scale("shape")+
    scale_colour_viridis_d()+
    geom_point(size=2.5, aes(y=catch_estimate_predicted, x=YEAR,col=kept_status, fill=kept_status, shape=pred_cat))+
    geom_line(aes(y=catch_estimate_predicted, x=YEAR,col=kept_status, linetype = "iREC included"))+
    scale_shape_manual(values=c(16,17))+
    scale_linetype_manual(values=c(2,1))+
    facet_wrap(~kept_status, scales="free") + ggtitle(paste(fishery_old_name_south[i])) + theme_bw()
 
 
cat("\n\n") 
resize(m, 7, 3)
 cat("\n\n\n")
}
```

## Pre-terminal Summer fisheries

-   The best model was one with a gamma distribution
-   Next, we investigated if the fully interactive model is better than a subset of interactions. We used the dredge function from the MuMin package to sequentially drop terms (including all interactions).
-   The best model included summer creel, marked and kept status, finescale fishery, and season and various interactions of these terms
-   $$ catch = creel.summer+finescale.fishery+status                                               + creel.summer:status+                                               finescale.fishery:status $$

```{r Modelling subsetting, message=FALSE, warning=FALSE, results='hide', echo=FALSE}
Summer_south<-Sport_mark_rate_finescale_combined %>%
  filter(YEAR %in% c(2013:2023))%>%
  filter(!str_detect(finescale_fishery, "CBC|NBC")) %>%
  filter(season %in% c("summer"))


#Modelling comparisons need to be done on models with same # of NAs - so drop nas
Summer_south_no_nas<-Summer_south %>% drop_na(any_of(c("creel_plus_summer", "mark_status","status", "finescale_fishery_old", "season", "creel_effort", "kept_status")))


Summer_model_gamma_full_spec<- glm(formula = catch_estimate + 3 ~ finescale_fishery_old + status +creel_plus_summer:status + finescale_fishery_old:status +  1 + creel_plus_summer,  family=Gamma(link = "log"), data = Summer_south_no_nas)

res_gam_effort_summer_spec <- simulateResiduals(Summer_model_gamma_full_spec, plot = T, quantreg=T)

#summary(Summer_model_gamma_full_spec)
```

```{r Modelling all seasonal southern BC fisheries, message=FALSE, warning=FALSE, results='hold'}
#Adding predicted data to the modelled set 
Summer_south_old<- Sport_mark_rate_finescale_combined %>% filter(YEAR %in% c(2005:2012)) %>% ungroup() %>% mutate(pred_cat = "predicted") %>% filter(!str_detect(finescale_fishery, "CBC|NBC"))%>%
  filter(season %in% c("summer"))
Summer_south_old_new<-predict.glm(Summer_model_gamma_full_spec, newdata =  Summer_south_old, type = "response")
Summer_south_old_new_2<-Summer_south_old %>%   mutate(catch_estimate_predicted = Summer_south_old_new)

Summer_south2<-Summer_south %>% mutate(catch_estimate_predicted = catch_estimate, pred_cat= "observed")
Summer_south_combined<- rbind(Summer_south_old_new_2, Summer_south2)



#### Adding confidence intervals based on model to a dataframe for plotting purposes
#based on this blog: https://fromthebottomoftheheap.net/2018/12/10/confidence-intervals-for-glms/

family.set <- family(Summer_model_gamma_full_spec)
ilink.family.set<- family.set$linkinv

want_marked_kept <- seq(1, nrow(Summer_south_no_nas %>% filter(status == "marked_Kept_total")), length.out = 1000)
want_marked_released <- seq(1, nrow(Summer_south_no_nas %>% filter(status == "marked_Released_total")), length.out = 1000)
want_umarked_kept <- seq(1, nrow(Summer_south_no_nas %>% filter(status == "unmarked_Kept_total")), length.out = 1000)
want_umarked_released <- seq(1, nrow(Summer_south_no_nas %>% filter(status == "unmarked_Released_total")), length.out = 1000)

mod<-Summer_model_gamma_full_spec

ndata_marked_kept <- with(Summer_south_no_nas %>% filter(status == "marked_Kept_total"), data_frame(creel_plus_summer= seq(min(creel_plus_summer), max(creel_plus_summer), length = 1000),  status = "marked_Kept_total", season = season[want_marked_kept], finescale_fishery_old=finescale_fishery_old[want_marked_kept], creel_effort=creel_effort[want_marked_kept], finescale_fishery=finescale_fishery[want_marked_kept]))

ndata_marked_released <- with(Summer_south_no_nas %>% filter(status == "marked_Released_total"), data_frame(creel_plus_summer= seq(min(creel_plus_summer), max(creel_plus_summer), length = 1000),  status = "marked_Released_total", season = season[want_marked_released], finescale_fishery_old=finescale_fishery_old[want_marked_released], creel_effort=creel_effort[want_marked_released], finescale_fishery=finescale_fishery[want_marked_released]))

ndata_unmarked_kept <- with(Summer_south_no_nas %>% filter(status == "unmarked_Kept_total"), data_frame(creel_plus_summer= seq(min(creel_plus_summer), max(creel_plus_summer),length = 1000),  status = "unmarked_Kept_total", season = season[want_umarked_kept], finescale_fishery_old=finescale_fishery_old[want_umarked_kept], creel_effort=creel_effort[want_umarked_kept], finescale_fishery=finescale_fishery[want_umarked_kept]))


ndata_unmarked_released <- with(Summer_south_no_nas %>% filter(status == "unmarked_Released_total"), data_frame(creel_plus_summer= seq(min(creel_plus_summer), max(creel_plus_summer), length = 1000),  status =  "unmarked_Released_total", season = season[want_umarked_released], finescale_fishery_old=finescale_fishery_old[want_umarked_released], creel_effort=creel_effort[want_umarked_released], finescale_fishery=finescale_fishery[want_umarked_released]))

ndata<- bind_rows(ndata_marked_kept,ndata_marked_released, ndata_unmarked_kept, ndata_unmarked_released)

## add the fitted values by predicting from the model for the new data
ndata<- add_column(ndata, fit = predict(mod, newdata = ndata, type = 'response'))
ndata<- bind_cols(ndata, setNames(as_tibble(predict(mod, ndata, se.fit = TRUE)[1:2]),
                                                   c('fit_link','se_link')))

ndata <- mutate(ndata,
                fit_resp  = ilink.family.set(fit_link),
                right_upr = ilink.family.set(fit_link + (2 * se_link)),
                right_lwr = ilink.family.set(fit_link - (2 * se_link)))

```

-   Produced summer plots

```{r forloop summer, results='asis', echo=FALSE}


yearMonth2_summer_south<- yearMonth2_season %>% filter(!str_detect(finescale_fishery, "CBC|NBC")) %>%
  filter(season %in% c("summer"))
fishery_name_south<- sort(unique(yearMonth2_summer_south$finescale_fishery))

  
for (i in 1:length(fishery_name_south)){
 
  cat("\n\n")
  cat("### ", paste0("", fishery_name_south[fishery_name_south== fishery_name_south[i]], " "),"\n\n") 
  
p1<-ggplot()+
  geom_tile(data=yearMonth2_summer_south %>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  geom_tile(data=yearMonth2_summer_south  %>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  labs(title = paste("Coverage for", fishery_name_south[i]),
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013) 

p2<-ggplot()+
  geom_tile(data=yearMonth2_summer_south %>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth2_summer_south%>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_2_season%>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_2_season%>% filter(finescale_fishery==fishery_name_south[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)


p<-p1+p2 + plot_layout(guides = "collect") & theme(legend.position = 'none')

cat("\n\n")
resize(p, 5, 2)


#####

dataminmax_marked_kept<- Summer_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Kept_total")
dataminmax_marked_released<- Summer_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Released_total")
dataminmax_unmarked_kept<- Summer_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Kept_total")
dataminmax_unmarked_released<- Summer_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Released_total")


g1<-ggplot(Summer_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Kept_total"), aes(x=creel_plus_summer,  y= catch_estimate, col=status))+
  geom_point()+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Kept_total"), mapping=aes(y= fit, x=creel_plus_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Kept_total"), mapping=aes(y= fit,x=creel_plus_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
   theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#440154"))+  scale_fill_manual(values=c("#440154"))+
  coord_cartesian(ylim = c(0,max(dataminmax_marked_kept$catch_estimate)), xlim = c(0,max(dataminmax_marked_kept$creel_plus_summer)))

g2<-ggplot(Summer_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Released_total"), aes(x=creel_plus_summer,  y= catch_estimate, col=status))+
  geom_point()+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Released_total"), mapping=aes(y= fit, x=creel_plus_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="marked_Released_total"), mapping=aes(y= fit,x=creel_plus_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
  theme_bw() +
 scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#31688e"))+  scale_fill_manual(values=c("#31688e"))+
  coord_cartesian(ylim = c(0,max(dataminmax_marked_released$catch_estimate)), xlim = c(0,max(dataminmax_marked_released$creel_plus_summer)))

g3<-ggplot(Summer_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Kept_total"), aes(x=creel_plus_summer,  y= catch_estimate, col=status))+
  geom_point()+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Kept_total"), mapping=aes(y= fit, x=creel_plus_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Kept_total"), mapping=aes(y= fit,x=creel_plus_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
  theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#35b779"))+  scale_fill_manual(values=c("#35b779"))+
  coord_cartesian(ylim = c(0,max(dataminmax_unmarked_kept$catch_estimate)), xlim = c(0,max(dataminmax_unmarked_kept$creel_plus_summer)))

g4<-ggplot(Summer_south_no_nas %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Released_total"), aes(x=creel_plus_summer,  y= catch_estimate, col=status))+
  geom_point()+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Released_total"), mapping=aes(y= fit, x=creel_plus_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_south[i], status=="unmarked_Released_total"), mapping=aes(y= fit,x=creel_plus_summer, ymin = right_lwr, ymax = right_upr, fill=status, col=status), alpha = 0.10)+
   theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#fde725"))+  scale_fill_manual(values=c("#fde725"))+
    coord_cartesian(ylim = c(0,max(dataminmax_unmarked_released$catch_estimate)), xlim = c(0,max(dataminmax_unmarked_released$creel_plus_summer)))

g<-g1+g2 + g3+g4 + plot_layout(guides = "collect") 
g
cat("\n\n")
 resize(g, 7, 5)
 
 
 m<-ggplot(Summer_south_combined %>% filter(finescale_fishery==fishery_name_south[i])) +
    geom_point(size=2.5,  aes(y=creel_unfiltered_plus, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=creel_unfiltered_plus, x=YEAR,col=status, linetype = " Unfiltered creel and logbook"))+
    scale_shape_manual(values=c(1,1))+
    new_scale("shape")+
    scale_colour_viridis_d()+
    geom_point(size=2.5, aes(y=catch_estimate_predicted, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=catch_estimate_predicted, x=YEAR,col=status, linetype = "iREC included"))+
    scale_shape_manual(values=c(16,17))+
    scale_linetype_manual(values=c(2,1))+
    facet_wrap(~status, scales="free") + ggtitle(paste(fishery_name_south[i])) + theme_bw()
 
 
cat("\n\n") 
resize(m, 7, 5)
 cat("\n\n\n")
}
```

# NBC and CBC

### Methods

Northern and Central BC data is collected in different ways than South Coast. Data was in various formats and pieced together as follows:

### Northern BC - NBC AABM S

-   Comprises Areas 1, 2 (East and West), 101, 102, 142

-   Data for 2005 to 2008 for areas 1 and 2W found in the Fixed Sport Estimates had total unchecked (for mark status) kept and released #s of fish in the sheet QCI Sport. The sheet "ALL" has an estimate of Mark rate. Therefore:

    -   Marked Kept = Unchecked Kept x mark rate

    -   Marked Released = Unchecked Released x mark rate

    -   Unmarked Kept = Unchecked Kept x (1- mark rate)

    -   Unmarked Released = Unchecked Released x (1- mark rate)

-   From 2009-2019, for Area 1, 2W, (and beginning in 2017 for 2E) there was only Unchecked Kept catch available and mark rate. Therefore we used the release rate from the Haida creel for the whole year for all of NBC AABM S to get releases.

    -   Marked Kept = Unchecked Kept x mark rate

    -   Marked Released = (Unchecked Kept x Release Ratio) x mark rate

    -   Unmarked Kept = Unchecked Kept x (1- mark rate)

    -   Unmarked Released = (Unchecked Kept x Release Ratio) x (1- mark rate)

-   From 2020 to present, for Area 1, 2W, and 2E there was only Unchecked Kept and Released catch available by month and mark rate. We used mark rate from iREC to extrapolate to marked and unmarked as above (2005-2008 period).

-   We modelled NBC AABM separately since the creel+ logbook data is collected in a unique way and modelled against calibrated iREC-only estimates.

-   The best model included historic effort, mark status and season

    $catch = historic summer + season + mark status + historic effort * historic summer + historic effort*mark status + historic summer* mark status + historic summer*season + mark status*season$

```{r Modelling all seasonal Northern AABM fisheries, message=FALSE, warning=FALSE, results='hold'}

Season_north_aabm<-Sport_mark_rate_finescale_combined%>% filter(YEAR %in% c(2013:2023)) %>% filter(finescale_fishery_old == "NBC AABM S")

#Modelling comparisons need to be done on models with same # of NAs - so drop nas
Season_north_aabm_no_nas<-Season_north_aabm %>% drop_na(any_of(c("historic_summer", "status", "finescale_fishery_old", "season", "historic_effort")))

North_aabm_model_full<- glm(formula = catch_estimate + 1 ~ historic_summer*status*season*historic_effort,  family=gaussian, data = Season_north_aabm_no_nas)
#summary(North_aabm_model_full)
#res <- simulateResiduals(North_aabm_model_full, plot = T, quantreg=T)

#poisson
North_aabm_model_full_poisson<- glm(formula = catch_estimate + 1 ~historic_summer*status*season*historic_effort,  family=poisson, data = Season_north_aabm_no_nas)
#res_pois <- simulateResiduals(North_aabm_model_full_poisson, plot = T, quantreg=T)
#summary(North_aabm_model_full_poisson)

#gamma
North_aabm_model_full_gamma<- glm(formula = (catch_estimate+1) ~historic_summer*status*season*historic_effort,  family=Gamma(link = "log"), data=Season_north_aabm_no_nas, na.action = na.fail)
#res_gam <- simulateResiduals(North_aabm_model_full_gamma, plot = T, quantreg=T)
#summary(North_aabm_model_full_gamma)

AICtab(North_aabm_model_full,North_aabm_model_full_poisson, North_aabm_model_full_gamma)

#gamma is the best

#Now changing around model specification:
North_aabm_model_full_gamma<- glm(formula = catch_estimate+1 ~historic_summer*season*historic_effort*status,  family=Gamma(link = "log"), data = Season_north_aabm_no_nas, na.action = na.fail)
dd<-dredge(North_aabm_model_full_gamma, fixed= ~ historic_summer)
subset(dd, delta < 2)
#plot(dd, labAsExpr = TRUE)
#
#summary(get.models(dd, 1)[[1]])

#The model with AIC <2 factors added back in:
North_aabm_model_full_gamma_spec<- glm(formula = catch_estimate+1 ~historic_summer+season+status+
                                                historic_effort*historic_summer + historic_effort*status + 
                                                historic_summer*season,  family=Gamma(link = "log"), data = Season_north_aabm_no_nas)
res_gam_drop_kept_spec <- simulateResiduals(North_aabm_model_full_gamma_spec, plot = T, quantreg=T)
#summary(North_aabm_model_full_gamma_spec)

AICtab(North_aabm_model_full_gamma, North_aabm_model_full_gamma_spec)

#Adding predicted data
Season_north_aabm_old<- Sport_mark_rate_finescale_combined %>% filter(YEAR %in% c(2005:2012)) %>% ungroup() %>% mutate(pred_cat = "predicted") %>% filter(finescale_fishery_old == "NBC AABM S")
Season_north_aabm_old_new<-predict.glm(North_aabm_model_full_gamma_spec, newdata =  Season_north_aabm_old, type = "response")
Season_north_aabm_old_new_2<-Season_north_aabm_old %>%   mutate(catch_estimate_predicted = Season_north_aabm_old_new)

Season_north_aabm2<-Season_north_aabm %>% mutate(catch_estimate_predicted = catch_estimate, pred_cat= "observed")
Season_north_aabm_combined<- rbind(Season_north_aabm_old_new_2, Season_north_aabm2)




#### Adding confidence intervals based on model to a dataframe for plotting purposes
#based on this blog: https://fromthebottomoftheheap.net/2018/12/10/confidence-intervals-for-glms/

family.set <- family(North_aabm_model_full_gamma_spec)
ilink.family.set<- family.set$linkinv

want_marked_kept <- seq(1, nrow(Season_north_aabm_no_nas %>% filter(status == "marked_Kept_total")), length.out = 1000)
want_marked_released <- seq(1, nrow(Season_north_aabm_no_nas %>% filter(status == "marked_Released_total")), length.out = 1000)
want_umarked_kept <- seq(1, nrow(Season_north_aabm_no_nas %>% filter(status == "unmarked_Kept_total")), length.out = 1000)
want_umarked_released <- seq(1, nrow(Season_north_aabm_no_nas %>% filter(status == "unmarked_Released_total")), length.out = 1000)

mod<-North_aabm_model_full_gamma_spec

ndata_marked_kept <- with(Season_north_aabm_no_nas %>% filter(status == "marked_Kept_total"), data_frame(historic_summer= seq(min(historic_summer), max(historic_summer), length = 1000),  status = "marked_Kept_total", season = season[want_marked_kept], finescale_fishery_old=finescale_fishery_old[want_marked_kept], historic_effort=historic_effort[want_marked_kept], finescale_fishery=finescale_fishery[want_marked_kept]))

ndata_marked_released <- with(Season_north_aabm_no_nas %>% filter(status == "marked_Released_total"), data_frame(historic_summer= seq(min(historic_summer), max(historic_summer), length = 1000),  status = "marked_Released_total", season = season[want_marked_released], finescale_fishery_old=finescale_fishery_old[want_marked_released], historic_effort=historic_effort[want_marked_released], finescale_fishery=finescale_fishery[want_marked_released]))

ndata_unmarked_kept <- with(Season_north_aabm_no_nas %>% filter(status == "unmarked_Kept_total"), data_frame(historic_summer= seq(min(historic_summer), max(historic_summer),length = 1000),  status = "unmarked_Kept_total", season = season[want_umarked_kept], finescale_fishery_old=finescale_fishery_old[want_umarked_kept], historic_effort=historic_effort[want_umarked_kept], finescale_fishery=finescale_fishery[want_umarked_kept]))


ndata_unmarked_released <- with(Season_north_aabm_no_nas %>% filter(status == "unmarked_Released_total"), data_frame(historic_summer= seq(min(historic_summer), max(historic_summer), length = 1000),  status =  "unmarked_Released_total", season = season[want_umarked_released], finescale_fishery_old=finescale_fishery_old[want_umarked_released], historic_effort=historic_effort[want_umarked_released], finescale_fishery=finescale_fishery[want_umarked_released]))

ndata<- bind_rows(ndata_marked_kept,ndata_marked_released, ndata_unmarked_kept, ndata_unmarked_released)

## add the fitted values by predicting from the model for the new data
ndata<- add_column(ndata, fit = predict(mod, newdata = ndata, type = 'response'))
ndata<- bind_cols(ndata, setNames(as_tibble(predict(mod, ndata, se.fit = TRUE)[1:2]),
                                                   c('fit_link','se_link')))

ndata <- mutate(ndata,
                fit_resp  = ilink.family.set(fit_link),
                right_upr = ilink.family.set(fit_link + (2 * se_link)),
                right_lwr = ilink.family.set(fit_link - (2 * se_link)))

```

-   forloop

```{r forloop seasonal NBC AABM, results='asis', echo=FALSE}

yearMonth2_season_north_aabm<- yearMonth2_season %>% filter(str_detect(finescale_fishery, "NBC AABM"))
fishery_name_north_aabm<- sort(unique(yearMonth2_season_north_aabm$finescale_fishery))

  
for (i in 1:length(fishery_name_north_aabm)){
 
  cat("\n\n")
  cat("### ", paste0("", fishery_name_north_aabm[fishery_name_north_aabm== fishery_name_north_aabm[i]], " "),"\n\n") 
  
p1<-ggplot()+
  geom_tile(data=yearMonth2_season_north_aabm %>% filter(finescale_fishery==fishery_name_north_aabm[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  geom_tile(data=yearMonth2_season_north_aabm  %>% filter(finescale_fishery==fishery_name_north_aabm[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  labs(title = paste("Coverage for", fishery_name_north_aabm[i]),
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013) 

p2<-ggplot()+
  geom_tile(data=yearMonth2_season_north_aabm %>% filter(finescale_fishery==fishery_name_north_aabm[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth2_season_north_aabm%>% filter(finescale_fishery==fishery_name_north_aabm[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_2_season%>% filter(finescale_fishery==fishery_name_north_aabm[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_2_season%>% filter(finescale_fishery==fishery_name_north_aabm[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)


p<-p1+p2 + plot_layout(guides = "collect") & theme(legend.position = 'none')

cat("\n\n")
resize(p, 5, 2)


#####
 
dataminmax_marked_kept<- Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Kept_total")
dataminmax_marked_released<- Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Released_total")
dataminmax_unmarked_kept<- Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Kept_total")
dataminmax_unmarked_released<- Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Released_total")

dataminmax_marked_kept<- Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Kept_total")
dataminmax_marked_released<- Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Released_total")
dataminmax_unmarked_kept<- Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Kept_total")
dataminmax_unmarked_released<- Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Released_total")

g1<-ggplot(Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Kept_total"), aes(x=historic_summer,  y= catch_estimate, col=status))+
  geom_point(aes(size=historic_effort))+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Kept_total"), mapping=aes(y= fit, x=historic_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Kept_total"), mapping=aes(y= fit,x=historic_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
   theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#440154"))+  scale_fill_manual(values=c("#440154"))+
  coord_cartesian(ylim = c(0,max(dataminmax_marked_kept$catch_estimate)), xlim = c(0,max(dataminmax_marked_kept$historic_summer)))

g2<-ggplot(Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Released_total"), aes(x=historic_summer,  y= catch_estimate, col=status))+
  geom_point(aes(size=historic_effort))+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Released_total"), mapping=aes(y= fit, x=historic_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="marked_Released_total"), mapping=aes(y= fit,x=historic_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
  theme_bw() +
 scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#31688e"))+  scale_fill_manual(values=c("#31688e"))+
  coord_cartesian(ylim = c(0,max(dataminmax_marked_released$catch_estimate)), xlim = c(0,max(dataminmax_marked_released$historic_summer)))

g3<-ggplot(Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Kept_total"), aes(x=historic_summer,  y= catch_estimate, col=status))+
  geom_point(aes(size=historic_effort))+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Kept_total"), mapping=aes(y= fit, x=historic_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Kept_total"), mapping=aes(y= fit,x=historic_summer, ymin = right_lwr, ymax = right_upr, fill=status), alpha = 0.10)+
  theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#35b779"))+  scale_fill_manual(values=c("#35b779"))+
  coord_cartesian(ylim = c(0,max(dataminmax_unmarked_kept$catch_estimate)), xlim = c(0,max(dataminmax_unmarked_kept$historic_summer)))

g4<-ggplot(Season_north_aabm_no_nas %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Released_total"), aes(x=historic_summer,  y= catch_estimate, col=status))+
  geom_point(aes(size=historic_effort))+
  geom_line(ndata %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Released_total"), mapping=aes(y= fit, x=historic_summer, col=status))+
  geom_ribbon(ndata %>% filter(finescale_fishery==fishery_name_north_aabm[i], status=="unmarked_Released_total"), mapping=aes(y= fit,x=historic_summer, ymin = right_lwr, ymax = right_upr, fill=status, col=status), alpha = 0.10)+
   theme_bw() +
  scale_size_continuous(range=c(1,3))+ scale_colour_manual(values=c("#fde725"))+  scale_fill_manual(values=c("#fde725"))+
    coord_cartesian(ylim = c(0,max(dataminmax_unmarked_released$catch_estimate)), xlim = c(0,max(dataminmax_unmarked_released$historic_summer)))

g<-g1+g2 + g3+g4 + plot_layout(guides = "collect") 
g
cat("\n\n")
 resize(g, 7, 5) 
 
 
 
 
 m<-ggplot(Season_north_aabm_combined %>% filter(finescale_fishery==fishery_name_north_aabm[i])) +
    geom_point(size=2.5,  aes(y=historic, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=historic, x=YEAR,col=status, linetype = "Unfiltered creel and logbook"))+ 
    scale_shape_manual(values=c(1,1))+
    new_scale("shape")+
    scale_colour_viridis_d()+
    geom_point(size=2.5, aes(y=catch_estimate_predicted, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=catch_estimate_predicted, x=YEAR,col=status, linetype = "iREC included"))+ 
    scale_shape_manual(values=c(16,17))+
    scale_linetype_manual(values=c(2,1))+
    facet_wrap(~status, scales="free") + ggtitle(paste(fishery_name_north_aabm[i])) + theme_bw()
 
cat("\n\n") 
resize(m, 7, 4)
 cat("\n\n\n")
}

```

```{r NBC AABM, echo=FALSE, message=FALSE, warning=FALSE}
NBC_1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook&creel estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for NBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook&creel estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs( x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_1+NBC_2+ plot_layout(guides = "collect")
```

### Central BC - CBC S

-   Good coverage 6:8 only, maybe 9 if omit a couple years

-   irec bumps this out by a few months but not all year

```{r CBC S, echo=FALSE, message=FALSE, warning=FALSE}
CBC_1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for CBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

CBC_2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

CBC_1+CBC_2+ plot_layout(guides = "collect")
```

### Northern BC - NBC ISBM

-   Missing a lot of data both before and after 2012.
-   Data appears to be 5:8 only, irec expands to all year

```{r NBC ISBM, echo=FALSE, message=FALSE, warning=FALSE}
NBC_ISBM1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for NBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_ISBM2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs( x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_ISBM1+NBC_ISBM2+ plot_layout(guides = "collect")
```
