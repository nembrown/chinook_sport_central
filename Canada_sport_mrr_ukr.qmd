---
title: "Canadian Sport Data revisions"
author: "Norah Brown"
date: today

editor: visual
execute: 
  warning: false

theme: litera
 
format:
  html:
    page-layout: full
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
toc: true
toc-depth: 4
toc-location: left
---

# Methods

```{r Loading packages, echo=FALSE}
#load packages
library(tidyverse)
library(odbc)
library(lubridate)
library(ggnewscale)
library(patchwork)
library(DHARMa)
library(lme4)
library(bbmle)
library(SuppDists)
library(MuMIn)

#utils
"%notin%" <- Negate("%in%")

col1 = "#d8e1cf"
col2 = "#438484"
col3 = "lightblue"
col4 = "lightblue4"
col5 = "pink"
col6 = "darkred"
colclear= "#1C00ff00"
```

## Pulling and filtering data

-   We pulled raw recreational catch data from CREST database: data sources include creel, irec, lodge and log-book data. Data is typically in number of marked and unmarked fish kept and released.

```{r Pulling from CREST}

#Pull sport data from CREST
source("PullAllSport.R")
# PullAllSport(Start_year) set the calendar year to start querying from to the current year
rslt <- PullAllSport(2005)
quality_report <- rslt[[1]]
estimates <- rslt[[2]]
rm(rslt)
```

-   Filtered data for marine estimates only

-   Filtered the creel data based on high quality creel which meet the following criteria in a given PFMA and month:

    -   At least 3 flights for each type of day (weekday or weekend)
    -   At least 25 interviews mid week OR at least 10% of interviews from mid-week
    -   At least 25 interviews on weekends OR at least 10% of interviews from weekend
    -   At least 15 day spread in flights
    -   At least 15 day spread in interviews

-   After filtering for criteria, we identify where a creel or logbook estimate was made (even if 0).

-   We combined estimates under sources called "Lodge Log","Lodge Manifest","Lodge Manifest - Log", "Lodge Estimate", "Log Estimate", "Lodge eLog" to be called lodge_log.

-   We identify a season - spring is months 1:5, summer 6:8 and fall 9:12

-   We also expanded the dataset to include all combinations of area, year, month, mark status, kept status and source -\> adding NAs where no data was collected

```{r Aligning creel and irec}
#isolating months and areas where there is definitely creel effort, to be used later:
creel_effort<-  estimates |>
                as_tibble() |>
                 mutate(INCLUDE_15 = case_when(
                   SOURCE != "Creel" ~ 1,
                   YEAR == 2006 & MONTH==8& REGION2=="WCVIS"& MANAGEMENT=="ISBM" ~ 1,
                   YEAR == 2005 & MONTH==7& REGION2=="GSS"& MANAGEMENT=="ISBM" ~ 1,
                   TRUE ~ INCLUDE_15
                 ))|>
                filter(INCLUDE_15 ==1, YEAR<2024, SOURCE=="Creel") |>
                dplyr::select(YEAR, MONTH, AREA, REGION2, MANAGEMENT) |>
                unique()
creel_effort$creel_done<-"yes"

#logbook effort
logbook_effort<-  estimates |>
  as_tibble() |>
  mutate(INCLUDE_15 = case_when(
    SOURCE != "Creel" ~ 1,
    YEAR == 2006 & MONTH==8& REGION2=="WCVIS"& MANAGEMENT=="ISBM" ~ 1,
    YEAR == 2005 & MONTH==7& REGION2=="GSS"& MANAGEMENT=="ISBM" ~ 1,
    TRUE ~ INCLUDE_15
  ))|>
  filter(INCLUDE_15 ==1, YEAR<2024, SOURCE %notin% c("Creel", "iREC")) |>
  dplyr::select(YEAR, MONTH, AREA, REGION2, MANAGEMENT) |>
  unique()
logbook_effort$logbook_done<-"yes"

creel_plus_effort<- full_join(creel_effort, logbook_effort) %>%
  mutate(creel_plus_done = case_when(
    logbook_done == "yes" | creel_done == "yes" ~ "yes",
    TRUE ~ "no"
  ))

Sport_filtered_south_irec_unfiltered<-
  estimates |>
  as_tibble() |>
  filter( YEAR<2024)|>
  filter(AREA %notin% c("Area 29 (In River)", "Campbell River", "Quinsam River", "CR-1", "CR-2", "CR-3", "CR-4", "QR-1", "QR-2", "QR-3", "QR-4")) |>
  mutate(AREA = case_when(
    AREA== "Area 29 (Marine)" ~ "Area 29",
    AREA== "Area 19" & REGION2=="JDF" ~ "Area 19 (JDF)",
    AREA== "Area 19" & REGION2=="GSS" ~ "Area 19 (GS)",
    TRUE ~ as.character(AREA))) |>
  filter(SUB_TYPE == "LEGAL") |>
  mutate(REGION2 = case_when(AREA == "Area 2" ~ "NC", TRUE ~ REGION2)) |>
  mutate(MARKS_DESC = case_when(
    MARKS_DESC == "Not Adipose Checked" ~ "unchecked",
    MARKS_DESC == "Not Checked" ~ "unchecked",
    MARKS_DESC == "Not Applicable" ~ "unchecked",
    MARKS_DESC == "Not Adipose Marked" ~ "unmarked",
    MARKS_DESC == "Adipose Marked" ~ "marked")) |>
  mutate(SOURCE = case_when(
    SOURCE == "Creel" ~ "creel_unfiltered",
    SOURCE == "Historic" ~ "historic",
    SOURCE %in% c("Lodge Log","Lodge Manifest","Lodge Manifest - Log", "Lodge Estimate", "Log Estimate", "Lodge eLog") ~ "lodge_log",
    SOURCE == "iREC" ~ "irec_calibrated",
    TRUE ~ SOURCE )) |>
  group_by(YEAR, MONTH, AREA, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE, INCLUDE_15) |>
  summarise(VARIANCE=sum(VARIANCE), VAL=sum(ESTIMATE)) |> ungroup()|>
  mutate(season = case_when(
    MONTH %in% c(1:4) ~ "spring",
    MONTH %in% c(5:9) ~ "summer",
    MONTH %in% c(10:12) ~ "fall"
  )) |>
  filter(SOURCE == "creel_unfiltered")


Sport_filtered_south_irec<-
  estimates |>
  as_tibble() |>
  mutate(INCLUDE_15 = case_when(
    SOURCE != "Creel" ~ 1,
    YEAR == 2006 & MONTH==8& REGION2=="WCVIS"& MANAGEMENT=="ISBM" ~ 1,
    YEAR == 2005 & MONTH==7& REGION2=="GSS"& MANAGEMENT=="ISBM" ~ 1,
    TRUE ~ INCLUDE_15
  ))|>
  filter(INCLUDE_15 ==1, YEAR<2024)|>
  filter(AREA %notin% c("Area 29 (In River)", "Campbell River", "Quinsam River", "CR-1", "CR-2", "CR-3", "CR-4", "QR-1", "QR-2", "QR-3", "QR-4")) |>
   mutate(AREA = case_when(
    AREA== "Area 29 (Marine)" ~ "Area 29",
    AREA== "Area 19" & REGION2=="JDF" ~ "Area 19 (JDF)",
    AREA== "Area 19" & REGION2=="GSS" ~ "Area 19 (GS)",
    TRUE ~ as.character(AREA))) |>
  filter(SUB_TYPE == "LEGAL") |>
  mutate(REGION2 = case_when(AREA == "Area 2" ~ "NC", TRUE ~ REGION2)) |>
  mutate(MARKS_DESC = case_when(
    MARKS_DESC == "Not Adipose Checked" ~ "unchecked",
    MARKS_DESC == "Not Checked" ~ "unchecked",
    MARKS_DESC == "Not Applicable" ~ "unchecked",
    MARKS_DESC == "Not Adipose Marked" ~ "unmarked",
    MARKS_DESC == "Adipose Marked" ~ "marked")) |>
  mutate(SOURCE = case_when(
    SOURCE == "Creel" ~ "creel",
    SOURCE == "Historic" ~ "historic",
    SOURCE %in% c("Lodge Log","Lodge Manifest","Lodge Manifest - Log", "Lodge Estimate", "Log Estimate", "Lodge eLog") ~ "lodge_log",
    SOURCE == "iREC" ~ "irec_calibrated",
    TRUE ~ SOURCE )) |>
  group_by(YEAR, MONTH, AREA, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE, INCLUDE_15) |>
  summarise(VARIANCE=sum(VARIANCE), VAL=sum(ESTIMATE)) |> ungroup()|>
  mutate(season = case_when(
    MONTH %in% c(1:4) ~ "spring",
    MONTH %in% c(5:9) ~ "summer",
    MONTH %in% c(10:12) ~ "fall"
  ))

Sport_filtered_south_irec<-Sport_filtered_south_irec |>
                           rbind(Sport_filtered_south_irec_unfiltered)



```

## Extrapolating unchecked catch

-   We also expanded the dataset to include all combinations of area, year, month, mark status, kept status and source -\> adding NAs where no data was collected

-   Data is typically in number of marked and unmarked fish kept and released, however, there are two other categories when mark status is unknown: unchecked kept and unchecked released. We need to extrapolate to marked and unmarked catch using mark rate

-   We calculated mark rate in a number of different ways and prioritize the assignment of mark rate in the following order:

    1.  Monthly area calculation - Mark rate calculated for a given source (iREC, creel, or logbook) within a given year, month, and area
    2.  Monthly average by source - Mark rate calculated within a given year, month, and area, averaged across sources
    3.  Monthly regional average - Mark rate calculated for a given source within a given year, month, and region (averaged across areas within a region)
    4.  Seasonal area average - Mark rate calculated for a given source (iREC, creel, or logbook) within a given year, season, and area
    5.  Seasonal regional average -Mark rate calculated for a given source within a given year, season, and region
    6.  Monthly area average across years - Mark rate calculated for a given source within a given month, area, and across years
    7.  Monthly regional average across years- Mark rate calculated for a given source within a given month, region, and across years

```{r Mark rates by category}

#2. Mark rate averaged across source
Sport_mark_rate_source<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, season, REGION2, SOURCE, MANAGEMENT), names_from=c(MARKS_DESC, TYPE), values_from = sum) |>
  mutate(marked_prop_source = sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  mutate_all(~ifelse(is.nan(.), NA, .)) %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT) %>% summarise(marked_prop_source =mean(marked_prop_source, na.rm=TRUE)) %>%
  dplyr::select(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, marked_prop_source) %>% ungroup()

#3. Mark rate monthly Regional average
Sport_mark_rate_REGION2<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_REGION2 =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by(YEAR, REGION2, MONTH, season, SOURCE, MANAGEMENT) %>% summarise(marked_prop_REGION2 =mean(marked_prop_REGION2, na.rm=TRUE)) %>%
  dplyr::select(YEAR, MONTH, season, REGION2, MANAGEMENT, marked_prop_REGION2) %>% ungroup()

#4. Mark rate seasonal area average
Sport_mark_rate_seasonal<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, REGION2, MANAGEMENT, SOURCE, season), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_seasonal =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by(YEAR, season, AREA, REGION2, SOURCE, MANAGEMENT) %>% summarise(marked_prop_seasonal =mean(marked_prop_seasonal, na.rm=TRUE)) %>%
  dplyr::select(YEAR, season, AREA, REGION2, MANAGEMENT, marked_prop_seasonal) %>% ungroup()

#5. Mark rate seasonal regional average
Sport_mark_rate_seasonal_reg<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, REGION2, MANAGEMENT, SOURCE, season), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_seasonal_reg =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by(YEAR,season, REGION2, SOURCE, MANAGEMENT) %>% summarise(marked_prop_seasonal_reg =mean(marked_prop_seasonal_reg, na.rm=TRUE)) %>%
  dplyr::select(YEAR, season, REGION2, MANAGEMENT, marked_prop_seasonal_reg) %>% ungroup()

#6. Mark rate area month across years
Sport_mark_rate_area_month<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, REGION2, MANAGEMENT, SOURCE, season), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_area_month =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by(AREA, MONTH, season, REGION2, SOURCE, MANAGEMENT) %>% summarise(marked_prop_area_month =mean(marked_prop_area_month, na.rm=TRUE)) %>%
  dplyr::select(AREA, MONTH, season, REGION2, MANAGEMENT, marked_prop_area_month) %>% ungroup()

#7. Mark rate regional month across years
Sport_mark_rate_region_month<- Sport_filtered_south_irec  %>%
  group_by(YEAR, AREA, MONTH, season, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL)) %>%
  pivot_wider(id_cols = c(YEAR, AREA, MONTH, REGION2, MANAGEMENT, SOURCE, season), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  mutate(marked_prop_region_month =sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  group_by( MONTH, season, REGION2, SOURCE, MANAGEMENT) %>% summarise(marked_prop_region_month =mean(marked_prop_region_month, na.rm=TRUE)) %>%
  dplyr::select(MONTH, season, REGION2, MANAGEMENT, SOURCE, marked_prop_region_month) %>% ungroup()
```

```{r expanding to all combinations}
allobs2 <- tidyr::expand(Sport_filtered_south_irec, nesting(AREA, REGION2, MANAGEMENT), YEAR, nesting(MONTH, season), MARKS_DESC, TYPE, SOURCE) %>%
           mutate(bad_combos = case_when(
             AREA %in% c("Area 25", "Area 26", "Area 27") & MANAGEMENT == "ISBM" & MONTH %in% c(1:6,10:12) ~ "bad",
             AREA %in% c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal") & MANAGEMENT == "ISBM" & MONTH %in% c(1:7,10:12) ~ "bad",
             TRUE ~ "good")) %>%
            filter(bad_combos == "good") %>%
            dplyr::select(-bad_combos)
```

-   We joined the various calculations of mark rate to the catch data and expanded unchecked kept and released into marked and unmarked of those categories using the best available chosen mark rate

```{r Allocating unchecked catch}
Sport_mark_rate<- Sport_filtered_south_irec  %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE, MARKS_DESC, TYPE) %>% summarise(sum=sum(VAL), sum_VARIANCE=sum(VARIANCE)) %>%
  ungroup() %>%
  full_join(allobs2) %>%
  pivot_wider(id_cols = c(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE), names_from=c(MARKS_DESC, TYPE), values_from = sum) %>%
  group_by(YEAR, MONTH, AREA, season, REGION2, MANAGEMENT, SOURCE) %>%
  mutate(marked_prop = sum(marked_Kept,marked_Released, na.rm = TRUE)/sum(marked_Kept,marked_Released,unmarked_Kept,unmarked_Released, na.rm =TRUE)) %>%
  left_join(Sport_mark_rate_source) %>%
  left_join(Sport_mark_rate_seasonal_reg) %>%
  left_join(Sport_mark_rate_area_month) %>%
  left_join(Sport_mark_rate_REGION2) %>%
  left_join(Sport_mark_rate_seasonal)%>%
  left_join(Sport_mark_rate_region_month) %>%
  mutate_all(~ifelse(is.nan(.), NA, .)) %>%
  mutate(marked_prop_use1 = case_when(
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & !is.na(marked_prop_source) & marked_prop_source %notin% c(0,1) ~ marked_prop_source,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & !is.na(marked_prop_REGION2) & marked_prop_REGION2 %notin% c(0,1) ~ marked_prop_REGION2,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & (is.na(marked_prop_REGION2)| marked_prop_REGION2 %in% c(0,1)) & !is.na(marked_prop_seasonal) & marked_prop_seasonal %notin% c(0,1) ~ marked_prop_seasonal,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & (is.na(marked_prop_REGION2)| marked_prop_REGION2 %in% c(0,1)) & (is.na(marked_prop_seasonal)| marked_prop_seasonal %in% c(0,1)) & !is.na(marked_prop_seasonal_reg) & marked_prop_seasonal_reg %notin% c(0,1) ~ marked_prop_seasonal_reg,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & (is.na(marked_prop_REGION2)| marked_prop_REGION2 %in% c(0,1)) & (is.na(marked_prop_seasonal)| marked_prop_seasonal %in% c(0,1)) & (is.na(marked_prop_seasonal_reg) | marked_prop_seasonal_reg %in% c(0,1)) & !is.na(marked_prop_area_month) & marked_prop_area_month %notin% c(0,1) ~ marked_prop_area_month,
    (is.na(marked_prop) | marked_prop %in% c(0,1)) & (is.na(marked_prop_source)| marked_prop_source %in% c(0,1))  & (is.na(marked_prop_REGION2)| marked_prop_REGION2 %in% c(0,1)) & (is.na(marked_prop_seasonal)| marked_prop_seasonal %in% c(0,1)) & (is.na(marked_prop_seasonal_reg) | marked_prop_seasonal_reg %in% c(0,1)) & (is.na(marked_prop_area_month) |marked_prop_area_month %in% c(0,1))& !is.na(marked_prop_region_month) & marked_prop_region_month %notin% c(0,1) ~ marked_prop_region_month,
    TRUE ~ marked_prop)) %>%
  mutate(marked_prop_use = case_when(
    is.na(marked_prop_use1) ~ 0.5,
    TRUE ~ marked_prop_use1)) %>%
  mutate(marked_Kept_add = marked_prop_use*unchecked_Kept,
         marked_Released_add = marked_prop_use*unchecked_Released,
         unmarked_Kept_add = (1-marked_prop_use)*unchecked_Kept,
         unmarked_Released_add = (1-marked_prop_use)*unchecked_Released) %>%
  mutate(marked_Kept_total = sum(marked_Kept_add, marked_Kept, na.rm = TRUE),
         marked_Released_total = sum(marked_Released_add, marked_Released, na.rm=TRUE),
         unmarked_Kept_total = sum(unmarked_Kept_add, unmarked_Kept, na.rm=TRUE),
         unmarked_Released_total = sum(unmarked_Released_add, unmarked_Released, na.rm=TRUE)) %>%
  ungroup()
```

## Choosing best catch estimate

-   We then used criteria to choose the catch estimate by PFMA and month as follows:

    -   In months 5-9 use creel+ lodge if that data exists, otherwise use calibrated iREC

    -   In months outside of 5-9 use calibrated iREC

-   This calculation was grouped ignoring mark and kept status, so that true zeros for one category of catch wouldn't influence the other categories inclusion.

```{r calculating catch estimate}
Sport_mark_rate2<-Sport_mark_rate %>%
  dplyr::select(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE, marked_Kept_total, unmarked_Kept_total, marked_Released_total, unmarked_Released_total) %>%
  pivot_longer(cols=c(contains("total")), names_to = "status", values_to = "value") %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE) %>%
  summarise_if(is.numeric, sum, na.rm = TRUE) %>%
  pivot_wider(id_cols = c(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT), names_from = SOURCE, values_from = value) %>%
  mutate_all(~ifelse(is.nan(.), NA, .)) %>%
  rowwise() %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT) %>%
  mutate(creel_plus = sum(creel,lodge_log, na.rm=TRUE),
         creel_unfiltered_plus = sum(creel_unfiltered,lodge_log, na.rm=TRUE),
         historic_plus = sum(historic,lodge_log, na.rm=TRUE)) %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT) %>%
  mutate(catch_estimate_cat = case_when(
    YEAR > 2012 & MONTH %in% c(5:9) & (is.na(creel) | creel==0) ~ "use_irec",
    YEAR > 2012 & MONTH %in% c(1:4,10:12) ~ "use_irec",
    YEAR < 2013 & (is.na(creel_plus) | creel_plus==0) & (!is.na(historic) & historic!=0)~ "use_historic",
    YEAR < 2013 & (is.na(creel_plus) | creel_plus==0) ~ "creel_plus_zero",
    TRUE ~ "use_creel_plus")) %>%
  ungroup() %>% dplyr::select(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, catch_estimate_cat)



Sport_mark_rate3<-Sport_mark_rate %>%
  dplyr::select(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, SOURCE, marked_Kept_total, unmarked_Kept_total, marked_Released_total, unmarked_Released_total) %>%
  pivot_longer(cols=c(contains("total")), names_to = "status", values_to = "value") %>%
  pivot_wider(id_cols = c(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, status), names_from = SOURCE, values_from = value) %>%
  mutate_all(~ifelse(is.nan(.), NA, .)) %>%
  rowwise() %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT, status) %>%
  mutate(creel_plus = sum(creel,lodge_log, na.rm=TRUE),
         creel_unfiltered_plus = sum(creel_unfiltered,lodge_log, na.rm=TRUE),
         historic_plus = sum(historic,lodge_log, na.rm=TRUE)) %>%
  group_by(YEAR, MONTH, season, AREA, REGION2, MANAGEMENT) %>%
  left_join(Sport_mark_rate2) %>%
  mutate(catch_estimate = case_when(
    catch_estimate_cat == "use_irec" ~ as.numeric(irec_calibrated),
    catch_estimate_cat == "use_historic" ~  as.numeric(historic_plus),
    catch_estimate_cat == "use_creel_plus" ~ as.numeric(creel_plus),
    catch_estimate_cat == "creel_zero" ~ as.numeric(creel_plus))) %>%
  ungroup() %>%
  relocate(catch_estimate_cat, .after=status)

```

## Splitting fisheries by season

-   Assign previous finescale fisheries to the catch data using PFMAs and month

-   Assign new finescale fisheries (including terminal) to the catch data using PFMAs and season

-   Generally seasonal fisheries fall into the pre-defined categories - spring is months 1:4, summer 5:9 and fall 10:12, with a few exceptions:

    -   WCVI AABM S SUMMER is only months 6:7 for Areas 21, 23, 24

    -   WCVI ISBM S SUMMER encompasses months 7:9 so as to not have a fall fishery that is only one month.

```{r Assigning finescale fisheries}
Sport_mark_rate_finescale<-
  Sport_mark_rate3%>% ungroup %>%
  mutate(finescale_fishery = case_when(
    AREA%in%c( "Area 125", "Area 126", "Area 127") & MANAGEMENT=="AABM" & season=="fall" ~ "NWCVI S FALL AABM",
    AREA%in%c( "Area 125", "Area 126", "Area 127") & MANAGEMENT=="AABM" & season=="spring" ~ "NWCVI S SPRING AABM",
    AREA%in%c( "Area 125", "Area 126", "Area 127") & MANAGEMENT=="AABM" & season=="summer" ~ "NWCVI S SUMMER AABM",

    AREA%in%c("Area 121", "Area 123", "Area 124") & MANAGEMENT=="AABM" & season=="fall" ~ "SWCVI S FALL AABM",
    AREA%in%c("Area 121", "Area 123", "Area 124") & MANAGEMENT=="AABM" & season=="spring" ~ "SWCVI S SPRING AABM",
    AREA%in%c("Area 121", "Area 123", "Area 124") & MANAGEMENT=="AABM" & season=="summer" ~ "SWCVI S SUMMER AABM",

    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & MONTH%in%c(10:12) ~ "SWCVI S FALL AABM",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & season=="spring" ~ "SWCVI S SPRING AABM",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & MONTH%in%c(6:7) ~ "SWCVI S SUMMER AABM",

    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(10:12) ~ "NWCVI S FALL AABM",
    AREA%in%c("Area 25", "Area 26", "Area 27") & season=="spring" ~ "NWCVI S SPRING AABM",
    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(6) ~ "NWCVI S SUMMER AABM",

    AREA%in%c("Area 121", "Area 123", "Area 124") & MANAGEMENT=="ISBM" & MONTH%in%c(7:9) ~ "SWCVI S SUMMER ISBM",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)") & MONTH%in%c(8,9) ~ "SWCVI S SUMMER ISBM",

    AREA%in%c("Area 125", "Area 126", "Area 127") & MANAGEMENT=="ISBM" & MONTH%in%c(7:9) ~ "NWCVI S SUMMER ISBM",
    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(7,8,9) ~ "NWCVI S SUMMER ISBM",

    (AREA %in%c("Area 13", "Area 14", "Area 15", "Area 16") |REGION2== "GSN")& season=="fall" ~ "NGS S FALL",
    (AREA %in%c("Area 13", "Area 14", "Area 15", "Area 16") |REGION2== "GSN")& season=="spring" ~ "NGS S SPRING",
    (AREA %in%c("Area 13", "Area 14", "Area 15", "Area 16") |REGION2== "GSN")& season=="summer" ~ "NGS S SUMMER",


    (AREA %in%c("Area 17", "Area 18", "Area 19 (GS)", "Area 28", "Area 29") |REGION2== "GSS")& season=="fall" ~ "SGS S FALL", #this captures 19
    (AREA %in%c("Area 17", "Area 18", "Area 19 (GS)", "Area 28", "Area 29") |REGION2== "GSS")& season=="spring" ~ "SGS S SPRING",
    (AREA %in%c("Area 17", "Area 18", "Area 19 (GS)", "Area 28", "Area 29") |REGION2== "GSS")& season=="summer" ~ "SGS S SUMMER",


    (AREA %in% c("Area 11", "Area 111", "Area 12") | REGION2 == "JST") & season=="fall" ~ "JNST S FALL",
    (AREA %in% c("Area 11", "Area 111", "Area 12")| REGION2 == "JST") & season=="spring" ~ "JNST S SPRING",
    (AREA %in% c("Area 11", "Area 111", "Area 12")| REGION2 == "JST") & season=="summer" ~ "JNST S SUMMER",


    AREA %in% c("Area 10", "Area 106", "Area 110", "Area 6", "Area 7", "Area 8", "Area 9", "Area 130", "Area 108", "Area 109", "Area 107") & season=="spring"   ~ "CBC S SPRING",
    AREA %in% c("Area 10", "Area 106", "Area 110", "Area 6", "Area 7", "Area 8", "Area 9", "Area 130", "Area 108", "Area 109", "Area 107") & season=="fall"  ~ "CBC S FALL",
    AREA %in% c("Area 10", "Area 106", "Area 110", "Area 6", "Area 7", "Area 8", "Area 9", "Area 130", "Area 108", "Area 109", "Area 107") & season=="summer"   ~ "CBC S SUMMER",


    AREA %in% c("Area 2","Area 1", "Area 101", "Area 102",  "Area 142", "Area 2E", "Area 2W")& season=="spring"   ~ "NBC AABM S SPRING",
    AREA %in% c("Area 2","Area 1", "Area 101", "Area 102",  "Area 142", "Area 2E", "Area 2W")& season=="fall"  ~ "NBC AABM S FALL",
    AREA %in% c("Area 2","Area 1", "Area 101", "Area 102",  "Area 142", "Area 2E", "Area 2W")& season=="summer"  ~ "NBC AABM S SUMMER",


    AREA %in% c( "Area 103", "Area 104", "Area 105", "Area 3", "Area 4", "Area 5")& season=="spring"  ~ "NBC ISBM S SPRING",
    AREA %in% c( "Area 103", "Area 104", "Area 105", "Area 3", "Area 4", "Area 5")& season=="fall"  ~ "NBC ISBM S FALL",
    AREA %in% c( "Area 103", "Area 104", "Area 105", "Area 3", "Area 4", "Area 5")& season=="summer"  ~ "NBC ISBM S SUMMER",


    (AREA %in% c( "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)") | REGION2 == "JDF") & season=="spring"  ~ "CA JDF S SPRING", #this captures 19
    (AREA %in% c( "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)") | REGION2 == "JDF") & season=="fall"  ~ "CA JDF S FALL",
    (AREA %in% c( "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)") | REGION2 == "JDF") & season=="summer"  ~ "CA JDF S SUMMER")) %>%


  mutate(finescale_fishery_old = case_when(
    AREA%in%c( "Area 125", "Area 126", "Area 127") & MANAGEMENT=="AABM" & MONTH%in%c(1:12) ~ "NWCVI S AABM",
    AREA%in%c("Area 121", "Area 123", "Area 124") & MANAGEMENT=="AABM" & MONTH%in%c(1:12) ~ "SWCVI S AABM",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)")  & MONTH%in%c(1:7, 10:12) ~ "SWCVI S AABM",
    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(1:6, 10:12) ~ "NWCVI S AABM",
    AREA%in%c("Area 121", "Area 123", "Area 124") & MANAGEMENT=="ISBM" & MONTH%in%c(7:12) ~ "SWCVI S ISBM",
    AREA%in%c("Area 125", "Area 126", "Area 127") & MANAGEMENT=="ISBM" & MONTH%in%c(7:12) ~ "NWCVI S ISBM",
    AREA%in%c("Area 21", "Area 24", "Area 23 (Barkley)", "Area 23 (Alberni Canal)") & MONTH%in%c(8,9) ~ "SWCVI S ISBM",
    AREA%in%c("Area 25", "Area 26", "Area 27") & MONTH%in%c(7,8,9) ~ "NWCVI S ISBM",
    (AREA %in%c("Area 13", "Area 14", "Area 15", "Area 16") |REGION2== "GSN")& MONTH%in%c(1:12) ~ "NGS S",
    (AREA %in%c("Area 17", "Area 18",  "Area 19 (GS)", "Area 28", "Area 29") |REGION2== "GSS")& MONTH%in%c(1:12) ~ "SGS S",
    (AREA %in% c("Area 11", "Area 111", "Area 12") | REGION2 == "JST") & MONTH%in%c(1:12) ~ "JNST S",
    AREA %in% c("Area 10", "Area 106", "Area 110", "Area 6", "Area 7", "Area 8", "Area 9", "Area 130", "Area 108", "Area 109", "Area 107")& MONTH%in%c(1:12)  ~ "CBC S",
    AREA %in% c("Area 2","Area 1", "Area 101", "Area 102",  "Area 142", "Area 2E", "Area 2W")& MONTH%in%c(1:12)  ~ "NBC AABM S",
    AREA %in% c( "Area 103", "Area 104", "Area 105", "Area 3", "Area 4", "Area 5")& MONTH%in%c(1:12)  ~ "NBC ISBM S",
    (AREA %in% c( "Area 19 (JDF)", "Area 20", "Area 20 (East)", "Area 20 (West)") | REGION2 == "JDF") & MONTH%in%c(1:12) ~ "CA JDF S"))


```

-   We also identified a fishery specific consistently creel or logbooked coverage period for the summer period

    -   This is where there is consistent data throughout the time series (from 2005 to 2023) from the creel + logbook data

    -   This consistent chunk of data will be used to predict the estimated catch in the section of the time series where we don't have iREC

    -   The summer coverage period included all months within 6:8 that are consistent through the timeseries.

```{r Assigning seasonal coverage}


Sport_mark_rate_finescale<- Sport_mark_rate_finescale %>% ungroup %>%
  mutate(summer_coverage_tf = case_when(
    finescale_fishery_old == "CA JDF S" & MONTH %in% c(6:8) & YEAR %notin% c(2020) ~ "yes",
    finescale_fishery_old == "JNST S" & MONTH %in% c(6:8) & YEAR %notin% c(2020) ~ "yes",
    finescale_fishery_old == "NGS S" & MONTH %in% c(6:8) & YEAR %notin% c(2020)  ~ "yes",
    finescale_fishery_old == "SGS S" & MONTH %in% c(6:8) & YEAR %notin% c(2016, 2020) ~ "yes",
    finescale_fishery_old == "SWCVI S ISBM" & MONTH %in% c(8) ~ "yes",
    finescale_fishery_old == "SWCVI S AABM" & MONTH %in% c(7:8) ~ "yes",
    finescale_fishery_old == "SWCVI S" & MONTH %in% c(6:8) & YEAR %notin% c(2020) ~ "yes",
    finescale_fishery_old == "NWCVI S ISBM" & MONTH %in% c(7:8) ~ "yes",
    finescale_fishery_old == "NWCVI S AABM" & MONTH %in% c(7:8) ~ "yes",
    finescale_fishery_old == "NWCVI S" & MONTH %in% c(6:8) & YEAR %notin% c(2014,2020)~ "yes",
    finescale_fishery_old == "CBC S" & MONTH %in% c(7:8) ~ "yes",
    finescale_fishery_old == "NBC AABM S" & MONTH %in% c(7:8) ~ "yes",
    finescale_fishery_old == "NBC ISBM S" & MONTH %in% c(7:8) ~ "yes",
    .default = "no"))
```

-   We sum up catch by mark and kept status for each year and new finescale fishery of the defined coverage periods for creel and for the previously calculated catch estimate. This is the data used in the modelling exercise described below.
-   We also calculate creel effort - a proportion of months and areas in a given finescale fishery that we surveyed using creel or logbooks. This is used in the modelling efforts below.

```{r summing data by fishery, combining summer period and catch effort}

Sport_mark_rate_finescale_sum<- Sport_mark_rate_finescale %>%
  filter(!is.na(finescale_fishery)) %>%
  group_by(YEAR, status, finescale_fishery_old, finescale_fishery) %>%
  summarise_at(vars(creel:catch_estimate), sum, na.rm=TRUE)

Sport_creel_finescale_summer<- Sport_mark_rate_finescale %>%
  filter(!is.na(finescale_fishery_old), summer_coverage_tf=="yes") %>%
  group_by(YEAR, status, finescale_fishery_old) %>%
  summarise_at(vars(creel_plus), sum, na.rm=TRUE) %>%
  rename(creel_plus_summer=creel_plus)

Sport_creel_finescale_creel_effort<- Sport_mark_rate_finescale %>%
  full_join(creel_plus_effort) %>%
  mutate(creel_plus_done = case_when(
    is.na(creel_plus_done)~ "no",
    TRUE ~ creel_plus_done)) %>%
  filter(!is.na(finescale_fishery_old), summer_coverage_tf=="yes") %>%
  group_by(YEAR, finescale_fishery_old, finescale_fishery) %>% count(creel_plus_done) %>%
  pivot_wider(names_from = creel_plus_done, values_from = n) %>%
  mutate(creel_effort = sum(yes, na.rm=TRUE)/sum(no, yes, na.rm=TRUE)) %>%
  ungroup() %>%
  dplyr::select(YEAR, finescale_fishery_old,creel_effort)


#Year, finescale fishery
Sport_mark_rate_finescale_combined<-left_join(Sport_mark_rate_finescale_sum, Sport_creel_finescale_summer)
Sport_mark_rate_finescale_combined<-left_join(Sport_mark_rate_finescale_combined, Sport_creel_finescale_creel_effort)

Sport_mark_rate_finescale_combined<-Sport_mark_rate_finescale_combined %>% mutate(mark_status = case_when(
  status %in% c("marked_Kept_total", "marked_Released_total") ~ "marked",
  TRUE ~ "unmarked"
))%>% mutate(kept_status = case_when(
  status %in% c("marked_Kept_total", "unmarked_Kept_total") ~ "Kept",
  TRUE ~ "Released"
))

Sport_mark_rate_finescale_combined<-Sport_mark_rate_finescale_combined %>% mutate(season = case_when(
  str_detect(finescale_fishery, "SUMMER")  ~ "summer",
  str_detect(finescale_fishery, "SPRING")  ~ "spring",
  str_detect(finescale_fishery, "FALL")  ~ "fall"))

```

# Visualization

-   Alternatively, we can add up the catch to get total catch estimates across fisheries by month.

```{r summarizing by old finescale fishery}
yearMonth <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "finescale_fishery_old"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% filter(finescale_fishery_old!="NA") %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


yearMonth_catch_estimate_1<-yearMonth %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

yearMonth_irec_1<-yearMonth %>% filter(sum_catch_estimate==sum_irec)

```

-   We can visualize this as creel and logbook only information and look for where there are gaps in coverage

```{r plotting coverage of creel and logbook only, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8, fig.width=10}

g1<-ggplot()+
  geom_tile(data=yearMonth, aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth, aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear, limits=c(0,50000))+
    facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage by finescale fishery",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

g1

```

-   We can then add on irec data to see where irec adds information

-   We see that almost always a creel- irec combination (blue) or irec (red) on its own will be chosen as the best estimate for the whole month. This is because there are typically a few PFMAs in the larger fishery that are not creeled in each month.

```{r plotting coverage including irec, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8, fig.width=10}

g3<-ggplot()+
  geom_tile(data=yearMonth, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear, limits=c(0,90000)) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel or logbook estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4,  na.value = colclear, limits=c(0,90000))+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1, aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6,  na.value = colclear, limits=c(0,90000))+
  facet_wrap(~finescale_fishery_old)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(title = "Coverage by finescale fishery",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

g3
```

# Modelling

-   Now we take the chunks of summer, spring, fall consistently creeled or logbooked data between 2013 and 2023 and establish a relationship via a model with the irec based catch estimate.

-   We investigate various models using a systematic approach:

    -   One model for all pre-terminal sport fisheries

    -   Same dataset tested for all models - therefore done without NAs

    -   We didn't consider random effects models since we don't have enough levels of each factor to warrant random effects inclusion (need \>10 typically)

    -   For all candidate models we used the DHARMa package to create a qq-plot to detect deviations in observations from expected distribution and a plot of the residuals against predicted values to detect patterns in residuals. We visually assessed whether candidate models improved plots.

    -   We also compared candidate models using AIC, a lower AIC indicating a better model fit.

    -   The order of comparisons was as follows:

        -   First we compared three distributions: normal (gaussian), poisson, and Gamma distribution to see which fit our data the best on the full model. These distributions are all consistent with our positive, continuous data

            $$
            catch = creel.summer * mark.status * kept.status * finescale.fishery * season * creel.effort
            $$

        -   Next, using the chosen distribution, we compared the full model with all terms to models with each of the terms dropped sequentially except for creel.summer which was our main interest.

            -   We did this first by dropping out full terms from the full interaction model, then used the dredge function in MuMIn to sequentially drop out the various sub-interactions

        -   We selected the model with the lowest AIC and best visual diagnostics.

## Pre-terminal fisheries

-   The best model was one with a gamma distribution:

```{r Modelling distributions, message=FALSE, warning=FALSE, echo=FALSE}

Season_south<-Sport_mark_rate_finescale_combined%>% filter(YEAR %in% c(2013:2023)) %>% filter(!str_detect(finescale_fishery, "CBC|NBC"))

#Modelling comparisons need to be done on models with same # of NAs - so drop nas
Season_south_no_nas<-Season_south %>% drop_na(any_of(c("creel_plus_summer", "mark_status", "finescale_fishery_old", "season", "creel_effort", "kept_status")))

Season_model_full<- glm(formula = catch_estimate ~creel_plus_summer*mark_status*kept_status*finescale_fishery_old*season*creel_effort,  family=gaussian, data = Season_south_no_nas)
# summary(Season_model_full)
# res <- simulateResiduals(Season_model_full, plot = T, quantreg=T)

#poisson
Season_model_full_poisson<- glm(formula = catch_estimate ~creel_plus_summer*mark_status*kept_status*finescale_fishery_old*season*creel_effort,  family=poisson, data = Season_south_no_nas)
#res_pois <- simulateResiduals(Season_model_full_poisson, plot = T, quantreg=T)
#summary(Season_model_full_poisson)

#gamma
Season_model_full_gamma<- glm(formula = (catch_estimate+3) ~creel_plus_summer*mark_status*kept_status*finescale_fishery_old*season*creel_effort,  family=Gamma(link = "log"), data = Season_south_no_nas)
# res_gam <- simulateResiduals(Season_model_full_gamma, plot = T, quantreg=T)
# summary(Season_model_full_gamma)

AICtab(Season_model_full,Season_model_full_poisson, Season_model_full_gamma)

```

-   The best model was one where kept status was dropped from the model:

```{r Modelling drop each term, message=FALSE, warning=FALSE, echo=FALSE}

#drop_ a single term: 
Season_model_gamma_drop_kept<- glm(formula = catch_estimate + 1 ~creel_plus_summer*mark_status*finescale_fishery_old*season*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_kept <- simulateResiduals(Season_model_gamma_drop_kept, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_kept)

Season_model_gamma_drop_mark<- glm(formula = catch_estimate + 1 ~creel_plus_summer*kept_status*finescale_fishery_old*season*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_mark <- simulateResiduals(Season_model_gamma_drop_mark, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_mark)

Season_model_gamma_drop_fishery<- glm(formula = catch_estimate+5 ~creel_plus_summer*mark_status*kept_status*season*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_fishery <- simulateResiduals(Season_model_gamma_drop_fishery, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_fishery)

Season_model_gamma_drop_season<- glm(formula = catch_estimate+1 ~creel_plus_summer*mark_status*kept_status*finescale_fishery_old*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_season <- simulateResiduals(Season_model_gamma_drop_season, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_season)

Season_model_gamma_drop_effort<- glm(formula = catch_estimate+3 ~creel_plus_summer*mark_status*kept_status*finescale_fishery_old*season,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_effort <- simulateResiduals(Season_model_gamma_drop_effort, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_effort)

AICtab(Season_model_full_gamma, Season_model_gamma_drop_kept, Season_model_gamma_drop_mark, Season_model_gamma_drop_fishery, Season_model_gamma_drop_season, Season_model_gamma_drop_effort)

```

-   Further investigation showed that the best model dropped both kept status and mark status but no further terms were dropped fully:

```{r Modelling model format, message=FALSE, warning=FALSE, echo=FALSE}

Season_model_gamma_drop_kept_mark<- glm(formula = catch_estimate+1 ~creel_plus_summer*finescale_fishery_old*season*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_kept_mark <- simulateResiduals(Season_model_gamma_drop_kept_mark, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_kept_mark)

Season_model_gamma_drop_kept_season<- glm(formula = catch_estimate + 1 ~creel_plus_summer*mark_status*finescale_fishery_old*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_kept_season <- simulateResiduals(Season_model_gamma_drop_kept_season, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_kept_season)

Season_model_gamma_drop_kept_fishery<- glm(formula = catch_estimate+5 ~creel_plus_summer*mark_status*season*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_kept_fishery <- simulateResiduals(Season_model_gamma_drop_kept_fishery, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_kept_fishery)

Season_model_gamma_drop_kept_effort<- glm(formula = catch_estimate+1 ~creel_plus_summer*mark_status*finescale_fishery_old*season,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_kept_effort <- simulateResiduals(Season_model_gamma_drop_kept_effort, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_kept_effort)

AICtab(Season_model_gamma_drop_kept, Season_model_gamma_drop_kept_mark, Season_model_gamma_drop_kept_season, Season_model_gamma_drop_kept_fishery, Season_model_gamma_drop_kept_effort)


#####kept and marked

Season_model_gamma_drop_kept_mark_effort<- glm(formula = catch_estimate+1 ~creel_plus_summer*finescale_fishery_old*season,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_kept_mark_effort <- simulateResiduals(Season_model_gamma_drop_kept_mark_effort, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_kept_mark_effort)

Season_model_gamma_drop_kept_mark_fishery<- glm(formula = catch_estimate+1 ~creel_plus_summer*season*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_kept_mark_fishery <- simulateResiduals(Season_model_gamma_drop_kept_mark_fishery, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_kept_mark_fishery)

Season_model_gamma_drop_kept_mark_season<- glm(formula = catch_estimate+1 ~creel_plus_summer*finescale_fishery_old*creel_effort,  family=Gamma(link = "log"), data = Season_south)
# res_gam_drop_kept_mark_season <- simulateResiduals(Season_model_gamma_drop_kept_mark_season, plot = T, quantreg=T)
# summary(Season_model_gamma_drop_kept_mark_season)

AICtab(Season_model_gamma_drop_kept_mark, Season_model_gamma_drop_kept_mark_effort, Season_model_gamma_drop_kept_mark_fishery, Season_model_gamma_drop_kept_mark_season)


```

-   Next, we invetisgated if the fully interactive model with these two terms dropped was better than a subset of interactions. A subset of these interactions was found to be the better fit. We then took this subset and added mark status back in and tested at what level of interactions was better.

```{r Modelling subsetting, message=FALSE, warning=FALSE, results='hide', echo=FALSE}
Season_model_gamma_drop_kept_2<- glm(formula = catch_estimate+3 ~creel_plus_summer*finescale_fishery_old*season*creel_effort*mark_status,  family=Gamma(link = "log"), data = Season_south_no_nas, na.action = na.fail)


dd2<-dredge(Season_model_gamma_drop_kept_2, fixed = ~
             creel_plus_summer+finescale_fishery_old+season+creel_effort+
             creel_plus_summer:finescale_fishery_old + creel_plus_summer:season + creel_plus_summer:creel_effort +
             finescale_fishery_old:season + finescale_fishery_old:creel_effort  +
             season:creel_effort +
             creel_plus_summer:finescale_fishery_old:creel_effort +
             finescale_fishery_old:season:creel_effort)
#subset(dd2, delta < 4)
dd2plot<-plot(dd2, labAsExpr = TRUE)
#summary(get.models(dd2, 1)[[1]])
resize <- function(g, fig_width=NA, fig_height=NA) {
  
  g_deparsed <- paste0(deparse(function() g), collapse = '')
  sub_chunk <- paste0("`","``{r sub_chunk_", floor(runif(1) * 10000), ", fig.height=", fig_height, ", fig.width=", fig_width, ", warning=FALSE, echo=FALSE}","\n(", g_deparsed, ")()","\n`","``")
  cat(knitr::knit(text = knitr::knit_expand(text = sub_chunk), quiet = TRUE))
  
}

cat("\n\n") 
resize(dd2plot, 10, 25)
 cat("\n\n\n")

```

-   Therefore the best model included creel effort, mark status, finescale fishery and season

    $$
    catch = creel.summer + creel.effort + finescale.fishery + season + mark.status +                                          creel.summer:finescale.fishery + creel.summer:season + creel.summer:creel.effort +creel.summer:mark.status +                                          finescale.fishery:season + finescale.fishery:creel.effort +                                      season:creel.effort + season:mark.status +                                          creel.effort:mark.status +                                          creel.summer:finescale.fishery:creel.effort + creel.summer:creel_effort:mark.status+                                          finescale.fishery:season:creel.effort,
    $$

```{r Modelling all seasonal southern BC fisheries, message=FALSE, warning=FALSE, results='hold'}

Season_model_gamma_drop_kept_spec<- glm(formula = catch_estimate+3 ~creel_plus_summer+finescale_fishery_old+season+creel_effort+mark_status+
                                          creel_plus_summer:finescale_fishery_old + creel_plus_summer:season + creel_plus_summer:creel_effort +creel_plus_summer:mark_status+
                                          finescale_fishery_old:season + finescale_fishery_old:creel_effort+
                                          season:creel_effort + season:mark_status +
                                          creel_effort:mark_status +
                                          creel_plus_summer:finescale_fishery_old:creel_effort +creel_plus_summer:creel_effort:mark_status+
                                          finescale_fishery_old:season:creel_effort, family=Gamma(link = "log"), data = Season_south_no_nas)
res_gam_drop_kept_spec <- simulateResiduals(Season_model_gamma_drop_kept_spec, plot = T, quantreg=T)
#summary(Season_model_gamma_drop_kept_spec)

# dat<- predict_response(Season_model_gamma_drop_kept_spec, terms = c("creel_plus_summer", "finescale_fishery_old", "season", "mark_status", "creel_effort"))
# plot(dat) + theme(legend.position = "bottom")
# 
# ggplot(dat, aes(x, predicted)) +
#   geom_line() +
#   geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1)+  facet_wrap(~facet)


#Adding predicted data
Season_south_old<- Sport_mark_rate_finescale_combined %>% filter(YEAR %in% c(2005:2012)) %>% ungroup() %>% mutate(pred_cat = "predicted") %>% filter(!str_detect(finescale_fishery, "CBC|NBC"))
Season_south_old_new<-predict.glm(Season_model_gamma_drop_kept_spec, newdata =  Season_south_old, type = "response")
Season_south_old_new_2<-Season_south_old %>%   mutate(catch_estimate_predicted = Season_south_old_new)

Season_south2<-Season_south %>% mutate(catch_estimate_predicted = catch_estimate, pred_cat= "observed")
Season_south_combined<- rbind(Season_south_old_new_2, Season_south2)
# 
# Season_south_combined  <- bind_cols(Season_south_combined , setNames(as_tibble(predict(Season_model_gamma_drop_kept_spec, Season_south_combined , se.fit = TRUE)[1:2]), c('fit_link','se_link')))
# 
# # Season_south_alt<-Sport_mark_rate_finescale_combined %>% ungroup() %>% filter(!str_detect(finescale_fishery, "CBC|NBC"))
# # 
# # Season_south_alt <- add_column(Season_south_alt, fit = predict(Season_model_gamma_drop_kept_spec, newdata = Season_south_alt, type = 'response'))
# 
# # Season_south_alt  <- bind_cols(Season_south_alt , setNames(as_tibble(predict(Season_model_gamma_drop_kept_spec, Season_south_alt , se.fit = TRUE)[1:2]),
# #                                    c('fit_link','se_link')))
# 
# 
# family.set <- family(Season_model_gamma_drop_kept_spec)
# ilink.family.set<- family.set$linkinv
# 
# Season_south_combined  <- mutate(Season_south_combined ,
#                 fit_resp  = ilink.family.set(fit_link),
#                 right_upr = ilink.family.set(fit_link + (2 * se_link)),
#                 right_lwr = ilink.family.set(fit_link - (2 * se_link)))

# Season_south_alt <-Season_south_alt %>% mutate(pred_cat = case_when(
#   YEAR <2013 ~ "predicted", 
#   YEAR > 2012 ~ "observed"))
# Season_south_combined<- bind_cols(Season_south_combined, setNames(as_tibble(predict(Season_model_gamma_drop_kept_spec, Season_south_combined, se.fit = TRUE)[1:2]),c('fit_link','se_link')))

## create the interval and backtransform
# Season_south_combined <- mutate(Season_south_combined,
#                 fit_resp  = ilink.family.set(fit_link),
#                 right_upr = ilink.family.set(fit_link + (2 * se_link)),
#                 right_lwr = ilink.family.set(fit_link - (2 * se_link)))
```

-   summarizing

```{r summarizing}
yearMonth2_season <- plyr::ddply(Sport_mark_rate_finescale, c( "YEAR", "MONTH", "finescale_fishery"), summarise,
                         sum_creel = sum(creel, na.rm = TRUE), sum= sum(creel_plus, na.rm = TRUE), sum_historic= sum(historic_plus, na.rm = TRUE), sum_catch_estimate = sum(catch_estimate, na.rm = TRUE), sum_irec = sum(irec_calibrated, na.rm = TRUE)) %>% filter(finescale_fishery!="NA") %>% mutate(across(where(is.numeric), ~na_if(., 0))) 


yearMonth_catch_estimate_2_season<-yearMonth2_season %>% filter(sum_catch_estimate!=sum,sum_catch_estimate!=sum_historic, sum_catch_estimate!=sum_irec)

yearMonth_irec_2_season<-yearMonth2_season %>% filter(sum_catch_estimate==sum_irec)

resize <- function(g, fig_width=NA, fig_height=NA) {
  
  g_deparsed <- paste0(deparse(function() g), collapse = '')
  sub_chunk <- paste0("`","``{r sub_chunk_", floor(runif(1) * 10000), ", fig.height=", fig_height, ", fig.width=", fig_width, ", warning=FALSE, echo=FALSE}","\n(", g_deparsed, ")()","\n`","``")
  cat(knitr::knit(text = knitr::knit_expand(text = sub_chunk), quiet = TRUE))
  
}


```

-   forloop

```{r forloop seasonal, results='asis', echo=FALSE}

yearMonth2_season<- yearMonth2_season %>% filter(!str_detect(finescale_fishery, "CBC|NBC"))
fishery_name<- sort(unique(yearMonth2_season$finescale_fishery))

  
for (i in 1:length(fishery_name)){
 
  cat("\n\n")
  cat("### ", paste0("", fishery_name[fishery_name== fishery_name[i]], " "),"\n\n") 
  
p1<-ggplot()+
  geom_tile(data=yearMonth2_season %>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_y_discrete(limits=rev)+
  geom_tile(data=yearMonth2_season  %>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  labs(title = paste("Coverage for", fishery_name[i]),
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013) 

p2<-ggplot()+
  geom_tile(data=yearMonth2_season %>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  scale_y_discrete(limits=rev)+
  guides(fill=guide_legend(title="creel and logbook estimates")) +
  geom_tile(data=yearMonth2_season%>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_2_season%>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_2_season%>% filter(finescale_fishery==fishery_name[i]), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)


p<-p1+p2 + plot_layout(guides = "collect") & theme(legend.position = 'none')

cat("\n\n")
resize(p, 5, 2)


#####
g<-ggplot(Season_south_combined %>% filter(finescale_fishery==fishery_name[i]), aes(x=creel_plus_summer, y= catch_estimate_predicted+1, col=mark_status, fill=mark_status))+geom_point(aes(shape=pred_cat, size=creel_effort))+
geom_smooth(method="glm", method.args = list(family= Gamma(link = "log")), fullrange=TRUE) + facet_wrap(~mark_status, scales="free") + ggtitle(paste(fishery_name[i])) + theme_bw() + scale_colour_viridis_d(option = "turbo") + scale_fill_viridis_d(option = "turbo") + scale_size_continuous(range = c(1, 3)) 

cat("\n\n")
 resize(g, 7, 3)
 
 
 m<-ggplot(Season_south_combined %>% filter(finescale_fishery==fishery_name[i])) +
    geom_point(size=2.5,  aes(y=creel_unfiltered_plus, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=creel_unfiltered_plus, x=YEAR,col=status, linetype = " Unfiltered creel and logbook"))+ 
    scale_shape_manual(values=c(1,1))+
    new_scale("shape")+
    scale_colour_viridis_d()+
    geom_point(size=2.5, aes(y=catch_estimate_predicted, x=YEAR,col=status, fill=status, shape=pred_cat))+
    geom_line(aes(y=catch_estimate_predicted, x=YEAR,col=status, linetype = "iREC included"))+ 
    scale_shape_manual(values=c(16,17))+
    scale_linetype_manual(values=c(2,1))+
    facet_wrap(~status, scales="free") + ggtitle(paste(fishery_name[i])) + theme_bw()
 
cat("\n\n") 
resize(m, 7, 4)
 cat("\n\n\n")
}

```

# CBC and NBC

### Methods

Data was in various formats and pieced together as follows:

### Northern BC - NBC AABM S

-   Comprises Areas 1, 2, 101, 102, 142

-   Data for 2005 to 2008 for areas 1 and 2W found in the Fixed Sport Estimates had total unchecked (for mark status) kept and released #s of fish in the sheet QCI Sport. The sheet "ALL" has an estimate of Mark rate. Therefore:

    -   Marked Kept = Unchecked Kept x mark rate

    -   Marked Released = Unchecked Released x mark rate

    -   Unmarked Kept = Unchecked Kept x (1- mark rate)

    -   Unmarked Released = Unchecked Released x (1- mark rate)

-   From 2009-2019, for Area 1, 2W, (and beginning in 2017 for 2E) there was only Unchecked Kept catch available and mark rate. Therefore we used the release rate from CNR file for the whole year for all of NBC AABM S to get releases.

    -   Marked Kept = Unchecked Kept x mark rate

    -   Marked Released = (Unchecked Kept x Release Ratio) x mark rate

    -   Unmarked Kept = Unchecked Kept x (1- mark rate)

    -   Unmarked Released = (Unchecked Kept x Release Ratio) x (1- mark rate)

### Central BC - CBC S

-   Good coverage 6:8 only, maybe 9 if omit a couple years

-   irec bumps this out by a few months but not all year

```{r CBC S, echo=FALSE, message=FALSE, warning=FALSE}
CBC_1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for CBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

CBC_2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="CBC S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs(
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

CBC_1+CBC_2+ plot_layout(guides = "collect")
```

### Northern BC - NBC AABM S

-   Missing 2005-2009. Should be able to get that.
-   Good coverage 5-9 , irec bumps out to whole year

```{r NBC AABM, echo=FALSE, message=FALSE, warning=FALSE}
NBC_1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for NBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="NBC AABM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs( x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_1+NBC_2+ plot_layout(guides = "collect")
```

### Northern BC - NBC ISBM

-   Missing a lot of data both before and after 2012.
-   Data appears to be 5:8 only, irec expands to all year

```{r NBC ISBM, echo=FALSE, message=FALSE, warning=FALSE}
NBC_ISBM1<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
    guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2, na.value = colclear)+
  facet_wrap(~finescale_fishery_old)+
  labs(title = "Coverage for NBC S",
       x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_ISBM2<-ggplot()+
  geom_tile(data=yearMonth %>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_historic),colour = "white") +
  scale_y_discrete(limits=rev, drop=FALSE)+
  guides(fill=guide_legend(title="logbook estimates")) +
  scale_fill_gradient(low = col1, high = col2,  na.value = colclear) +
  new_scale_fill() +
  geom_tile(data=yearMonth_catch_estimate_1%>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col3, high = col4, na.value = colclear)+
  guides(fill=guide_legend(title="creel plus iREC estimates")) +
  new_scale_fill() +
  geom_tile(data=yearMonth_irec_1%>% filter(finescale_fishery_old=="NBC ISBM S"), aes(x=YEAR, y=as.factor(MONTH), fill = sum_catch_estimate),colour = "white") +
  scale_fill_gradient(low = col5, high = col6, na.value = colclear)+
  guides(fill=guide_legend(title="iREC estimates")) +
  labs( x = "Year", y = "Month") +
  theme_bw() + theme_minimal() + geom_vline(xintercept = 2013)

NBC_ISBM1+NBC_ISBM2+ plot_layout(guides = "collect")
```
